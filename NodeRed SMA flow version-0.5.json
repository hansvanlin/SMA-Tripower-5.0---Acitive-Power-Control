[
    {
        "id": "606856dedc3c3155",
        "type": "subflow",
        "name": "Energy zero (2)",
        "info": "This subflow uses the energy zero API for retrieving the hourly energy prices from the API of https://www.energyzero.nl/ for either today or the next day. \nThese are the prices as they are used by the Dutch energy providers ANWB energie, Energie van Ons and others.\n\nIn order not to load the API too heavy a rate limiter of 1 query per 15 minutes has been added to the subflow.\n\nDo note that tomorrows prices can be queried after 15:00, so there is a delay built in the\nnode that handles that.\n\n# Configuration\n\nPrice information can be retrieved for either today or tomorrow (default). It\nis also possible set if the prices should be retrieved including (default) or excluding tax.\n\n# Input\n\nIt triggers when injecting a message into the node.\n\n# Output\n\nThe output is an object with the result and a status message stored into the `msg.payload`.\n\nMost important is the `msg.payload.result`, which contains the estimated production of the panels. E.g.:\n\n```\npayload: object\n  Prices: array[24]\n    [0 … 9]\n    [10 … 19]\n    [20 … 23]\n      20: object\n        price: 0.15\n        readingDate: \"2023-01-04T19:00:00Z\"\n      21: object\n      22: object\n      23: object\n  intervalType: 4\n  average: 0.12\n  fromDate: \"2023-01-03T23:00:00Z\"\n  tillDate: \"2023-01-04T22:59:59.999Z\"\n```\n\nThe `msg.payload.average` gives the average price.\n\n# Status\n\nIn order not to load the api too much a rate limit has been added to maximize\nqueries once per 15 minutes. The status message turns green when a query is\nallowed and red if it is not allowed.\n\nIf the delay is active (tomorrows prices can be queried after 15:00), the\nnode will show that and wait until 15:00 before passing the message.\n",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "a9b924145a848962"
                    },
                    {
                        "id": "b334a8b682a71c89"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1120,
                "y": 80,
                "wires": [
                    {
                        "id": "e18a1bf3efb367ed",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "type",
                "type": "str",
                "value": "tomorrow",
                "ui": {
                    "icon": "font-awesome/fa-calendar",
                    "label": {
                        "en-US": "Type"
                    },
                    "type": "select",
                    "opts": {
                        "opts": [
                            {
                                "l": {
                                    "en-US": "Today"
                                },
                                "v": "today"
                            },
                            {
                                "l": {
                                    "en-US": "Tomorrow"
                                },
                                "v": "tomorrow"
                            }
                        ]
                    }
                }
            },
            {
                "name": "inctax",
                "type": "bool",
                "value": "true",
                "ui": {
                    "icon": "font-awesome/fa-money",
                    "label": {
                        "en-US": "Inc. tax"
                    },
                    "type": "checkbox"
                }
            }
        ],
        "meta": {
            "module": "Energy zero",
            "version": "0.0.2",
            "author": "Dirk-Jan Faber <dfaber@victronenergy.com>",
            "desc": "Query the Energy Zero API",
            "keywords": "energy zero, anwb, victron",
            "license": "GPL-3.0"
        },
        "color": "#00bb00",
        "icon": "font-awesome/fa-sun-o",
        "status": {
            "x": 940,
            "y": 240,
            "wires": [
                {
                    "id": "b334a8b682a71c89",
                    "port": 0
                },
                {
                    "id": "068f0a5f1387bb4d",
                    "port": 0
                },
                {
                    "id": "3bcc1815a160e167",
                    "port": 0
                },
                {
                    "id": "e2381fe37dc1077e",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "9f2d19adc6e5b187",
        "type": "http request",
        "z": "606856dedc3c3155",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 810,
        "y": 80,
        "wires": [
            [
                "e18a1bf3efb367ed"
            ]
        ]
    },
    {
        "id": "cc136d99da0c303f",
        "type": "function",
        "z": "606856dedc3c3155",
        "name": "create energyzero url",
        "func": "msg.url = 'https://api.energyzero.nl/v1/energyprices';\nvar offset = 0;\nmsg.delay = 0;\nvar start = new Date();\n\nif (env.get('type') == 'tomorrow') {\n    offset = 24;\n    const targetTime = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 15, 0, 0);\n    msg.delay = targetTime.getTime() - start.getTime();\n}\n\nstart.setUTCHours(0 + offset, start.getTimezoneOffset(), 0, 0);\nmsg.url += '?fromDate=' + start.toISOString();\n\nvar end = new Date();\nend.setUTCHours(23 + offset, start.getTimezoneOffset()+59, 59, 999);\nmsg.url += '&tillDate=' + end.toISOString();\n\nmsg.url += '&interval=4&usageType=1'\n\nif (env.get('inctax')) {\n    msg.url += '&inclBtw=true'\n} else {\n    msg.url += '&inclBtw=false'\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 80,
        "wires": [
            [
                "f378c36d46b3d835",
                "a49389ad67e3f18a"
            ]
        ]
    },
    {
        "id": "e18a1bf3efb367ed",
        "type": "json",
        "z": "606856dedc3c3155",
        "name": "Convert to json",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 980,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a9b924145a848962",
        "type": "delay",
        "z": "606856dedc3c3155",
        "name": "1 msg/15 seconds",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "15",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 190,
        "y": 80,
        "wires": [
            [
                "cc136d99da0c303f",
                "efc16e4e005fba73"
            ]
        ]
    },
    {
        "id": "efc16e4e005fba73",
        "type": "delay",
        "z": "606856dedc3c3155",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 220,
        "wires": [
            [
                "068f0a5f1387bb4d"
            ]
        ]
    },
    {
        "id": "b334a8b682a71c89",
        "type": "change",
        "z": "606856dedc3c3155",
        "name": "rate limit active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"fill\": \"yellow\", \"text\": \"Rate limiter active\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "068f0a5f1387bb4d",
        "type": "change",
        "z": "606856dedc3c3155",
        "name": "rate limit inactive",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"fill\": \"green\", \"text\": \"Ok\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a370903c9c36f49b",
        "type": "inject",
        "z": "606856dedc3c3155",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 260,
        "wires": [
            [
                "068f0a5f1387bb4d"
            ]
        ]
    },
    {
        "id": "f378c36d46b3d835",
        "type": "delay",
        "z": "606856dedc3c3155",
        "name": "Optional delay",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 80,
        "wires": [
            [
                "9f2d19adc6e5b187",
                "e2381fe37dc1077e"
            ]
        ]
    },
    {
        "id": "a49389ad67e3f18a",
        "type": "switch",
        "z": "606856dedc3c3155",
        "name": "",
        "property": "delay",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 160,
        "wires": [
            [
                "3bcc1815a160e167"
            ]
        ]
    },
    {
        "id": "3bcc1815a160e167",
        "type": "change",
        "z": "606856dedc3c3155",
        "name": "delay",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"fill\": \"yellow\", \"text\": \"Delaying until 15.00\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e2381fe37dc1077e",
        "type": "change",
        "z": "606856dedc3c3155",
        "name": "Ok",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"fill\": \"green\", \"text\": \"Ok\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4d381f093e6152d7",
        "type": "tab",
        "label": "SMA Sunny Tripower 5.0",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f87a84eaf3997bc8",
        "type": "modbus-write",
        "z": "4d381f093e6152d7",
        "name": "SMA Modbus Write 40023 ( Limit )",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "3",
        "dataType": "HoldingRegister",
        "adr": "40023",
        "quantity": "1",
        "server": "67aa8a7899544f4d",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1355,
        "y": 420,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "42010d55d522140c",
        "type": "inject",
        "z": "4d381f093e6152d7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 135,
        "wires": [
            [
                "546a95fa24eaeb8b"
            ]
        ]
    },
    {
        "id": "546a95fa24eaeb8b",
        "type": "modbus-getter",
        "z": "4d381f093e6152d7",
        "name": "SMA Modbus (41255) Power",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "3",
        "dataType": "HoldingRegister",
        "adr": "41255",
        "quantity": "2",
        "server": "67aa8a7899544f4d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 515,
        "y": 135,
        "wires": [
            [
                "c6a119a3da6f8bee",
                "e35f2cf319a71233"
            ],
            []
        ]
    },
    {
        "id": "7ae2fde1fbced2af",
        "type": "ui_text",
        "z": "4d381f093e6152d7",
        "group": "4fb0db5cea9cd881",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Power limit %",
        "label": "SMA Power Limit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 1045,
        "y": 105,
        "wires": []
    },
    {
        "id": "c6a119a3da6f8bee",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "Power Limit",
        "func": "var limit = msg.payload[0] /100;\n\n\n\nreturn [{ payload: limit }]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 805,
        "y": 105,
        "wires": [
            [
                "7ae2fde1fbced2af"
            ]
        ]
    },
    {
        "id": "ec92a1d03709eeda",
        "type": "ui_slider",
        "z": "4d381f093e6152d7",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "5",
        "max": "100",
        "step": "5",
        "className": "",
        "x": 965,
        "y": 420,
        "wires": [
            [
                "c3adf3a742914aaa",
                "191dd49f3ab6321e"
            ]
        ]
    },
    {
        "id": "c0e282528bba806c",
        "type": "ui_text",
        "z": "4d381f093e6152d7",
        "group": "4fb0db5cea9cd881",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "W",
        "label": "",
        "format": "{{msg.payload}} W",
        "layout": "row-right",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 1095,
        "y": 165,
        "wires": []
    },
    {
        "id": "e35f2cf319a71233",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "Power Limit % to W , sma 5kW",
        "func": "var pro = msg.payload[0] * 0.5; // factor 0.5 for 5kW  inverter\n\n\n\nreturn [{ payload: pro }]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 855,
        "y": 165,
        "wires": [
            [
                "c0e282528bba806c",
                "74a8e6aaa2e96c3d"
            ]
        ]
    },
    {
        "id": "c3adf3a742914aaa",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "* 100",
        "func": "var lim = msg.payload *100;\nreturn [{payload: lim}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1145,
        "y": 420,
        "wires": [
            [
                "f87a84eaf3997bc8"
            ]
        ]
    },
    {
        "id": "191dd49f3ab6321e",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "* 50 , sma 5kW",
        "func": "var lim = msg.payload * 50; // factor for 5kW  inverter\nreturn [{payload: lim}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 525,
        "wires": [
            [
                "e88135e8a1039491"
            ]
        ]
    },
    {
        "id": "e88135e8a1039491",
        "type": "ui_text",
        "z": "4d381f093e6152d7",
        "group": "4fb0db5cea9cd881",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "set:",
        "label": "",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#19e119",
        "x": 1325,
        "y": 525,
        "wires": []
    },
    {
        "id": "5218e7e434cbfdbd",
        "type": "comment",
        "z": "4d381f093e6152d7",
        "name": "Read Modbus values",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "2b890f465fbcdfdc",
        "type": "comment",
        "z": "4d381f093e6152d7",
        "name": "Write Modbus Register",
        "info": "",
        "x": 160,
        "y": 300,
        "wires": []
    },
    {
        "id": "25103bd88bc2ab96",
        "type": "comment",
        "z": "4d381f093e6152d7",
        "name": "Dynamic Control P-limit",
        "info": "",
        "x": 520,
        "y": 600,
        "wires": []
    },
    {
        "id": "1676718e16852e98",
        "type": "link in",
        "z": "4d381f093e6152d7",
        "name": "actual use in 1",
        "links": [
            "b792982110625bd6"
        ],
        "x": 240,
        "y": 765,
        "wires": [
            [
                "7ff1a9a7f80d1877",
                "55b00ee8a6cac435",
                "7899adbe2a1eebcb"
            ]
        ]
    },
    {
        "id": "3e56a6c32a84927f",
        "type": "comment",
        "z": "4d381f093e6152d7",
        "name": "actual use in",
        "info": "",
        "x": 145,
        "y": 765,
        "wires": []
    },
    {
        "id": "e10ec800de59a308",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "Power limit factor",
        "func": "//var Marge = 400 ;\n//var Limfactor = (msg.payload + Marge) / 5000 ;\nvar Limfactor = (msg.payload) / 5000;\nreturn [{ payload: Limfactor }];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 855,
        "wires": [
            [
                "5b3343720f53c318"
            ]
        ]
    },
    {
        "id": "9757adc25ad441bf",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "* 100",
        "func": "var lim = msg.payload *100 ;\nvar limit = Math.ceil(lim) ; \nreturn [{payload: limit}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1025,
        "y": 855,
        "wires": [
            [
                "3ba93ece81967f14"
            ]
        ]
    },
    {
        "id": "b7cbe9365ec96ff7",
        "type": "delay",
        "z": "4d381f093e6152d7",
        "name": "",
        "pauseType": "rate",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1135,
        "y": 690,
        "wires": [
            [
                "ec92a1d03709eeda"
            ]
        ]
    },
    {
        "id": "0f54edbb38c56411",
        "type": "ui_switch",
        "z": "4d381f093e6152d7",
        "name": "Dynamic Control",
        "label": "Dynamic Control",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 14,
        "width": 6,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "state",
        "topicType": "str",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 520,
        "y": 645,
        "wires": [
            [
                "0160aa5e3efc4f1a",
                "268493ed71720a3b"
            ]
        ]
    },
    {
        "id": "7ff1a9a7f80d1877",
        "type": "ui_text",
        "z": "4d381f093e6152d7",
        "group": "4fb0db5cea9cd881",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "Actual",
        "label": "Actual Use",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#0a95eb",
        "x": 395,
        "y": 765,
        "wires": []
    },
    {
        "id": "5944b2024e02cd5a",
        "type": "ui_text",
        "z": "4d381f093e6152d7",
        "group": "4fb0db5cea9cd881",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "Dynamic Limit",
        "label": "Calc. Dynamic Limit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffcb13",
        "x": 1565,
        "y": 855,
        "wires": []
    },
    {
        "id": "5b3343720f53c318",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "abs",
        "func": "var abs = Math.abs(msg.payload);\n\nreturn [{ payload: abs }]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 855,
        "wires": [
            [
                "9757adc25ad441bf"
            ]
        ]
    },
    {
        "id": "0160aa5e3efc4f1a",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "Flow On/OFF",
        "func": "var state = context.get(\"state\") || \"off\";\n\n// Display initial state status\nif (state == \"on\") {\n    node.status({ fill: \"green\", shape: \"dot\", text: state });\n} else {\n    node.status({ fill: \"red\", shape: \"dot\", text: state });\n}\n\nif (msg.topic == \"state\") {\n    context.set(\"state\", msg.payload);\n    state = msg.payload;\n    // update status\n    if (state == \"on\") {\n        node.status({ fill: \"green\", shape: \"dot\", text: state });\n    } else {\n        node.status({ fill: \"red\", shape: \"dot\", text: state });\n    }\n} else {\n    if (state == \"on\") {\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\n//var max = 100;\n//return [{ payload:max}];",
        "libs": [],
        "x": 775,
        "y": 690,
        "wires": [
            [
                "62bc963d8358204a"
            ]
        ]
    },
    {
        "id": "733b7b4cf87e4226",
        "type": "comment",
        "z": "4d381f093e6152d7",
        "name": "Manual P-limit",
        "info": "",
        "x": 910,
        "y": 375,
        "wires": []
    },
    {
        "id": "86d20df9e554aa30",
        "type": "inject",
        "z": "4d381f093e6152d7",
        "name": "Daily reset to 100%",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 280,
        "y": 420,
        "wires": [
            [
                "ec92a1d03709eeda"
            ]
        ]
    },
    {
        "id": "3ba93ece81967f14",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "range (min-max)",
        "func": "var min = 0 ;\nvar max = 100 ;\n\nvar limit = msg.payload ;\n\nif (limit > max) {\n    limit = max;\n} else if (limit < min) {\n    limit = min;\n} \n\n\nreturn[{payload:limit}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 855,
        "wires": [
            [
                "0160aa5e3efc4f1a",
                "5944b2024e02cd5a",
                "682ecb8750e36737"
            ]
        ]
    },
    {
        "id": "268493ed71720a3b",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "reset after off",
        "func": "var state = context.get(\"state\") || \"off\";\nvar max = 100;\n\nif (state == \"off\") {\n    return [{ payload: max }];\n\n}\n\n\n//var max = 100;\n//return [{ payload:max}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 630,
        "wires": [
            [
                "ec92a1d03709eeda"
            ]
        ]
    },
    {
        "id": "62bc963d8358204a",
        "type": "smooth",
        "z": "4d381f093e6152d7",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "8",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 960,
        "y": 690,
        "wires": [
            [
                "b7cbe9365ec96ff7"
            ]
        ]
    },
    {
        "id": "682ecb8750e36737",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "limit W",
        "func": "var lim = msg.payload * 50; // factor for 5kW  inverter\nreturn [{ payload: lim }];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 915,
        "wires": [
            [
                "166f953d7d4b6e62",
                "535fb5d10b0076b6",
                "f94783076c6de80d"
            ]
        ]
    },
    {
        "id": "166f953d7d4b6e62",
        "type": "ui_text",
        "z": "4d381f093e6152d7",
        "group": "4fb0db5cea9cd881",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "W",
        "label": "",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffcb13",
        "x": 1595,
        "y": 915,
        "wires": []
    },
    {
        "id": "042eae7bfd01841c",
        "type": "ui_chart",
        "z": "4d381f093e6152d7",
        "name": "",
        "group": "4fb0db5cea9cd881",
        "order": 1,
        "width": 6,
        "height": 5,
        "label": "SMA Tripower 5.0",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#21a1de",
            "#19e119",
            "#ffcb13",
            "#ff7d0f",
            "#98df8a",
            "#c3f05a",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2055,
        "y": 270,
        "wires": [
            []
        ]
    },
    {
        "id": "74a8e6aaa2e96c3d",
        "type": "change",
        "z": "4d381f093e6152d7",
        "d": true,
        "name": "Powerlimit",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "P-Limit",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 270,
        "wires": [
            [
                "042eae7bfd01841c"
            ]
        ]
    },
    {
        "id": "33363070e09cf2a9",
        "type": "change",
        "z": "4d381f093e6152d7",
        "name": "Actual Use",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Act. Use",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 330,
        "wires": [
            [
                "312100c039c3f9e5"
            ]
        ]
    },
    {
        "id": "55b00ee8a6cac435",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "Actual use",
        "func": "\nvar Actual = msg.payload ;\nreturn [{ payload: Actual }];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 765,
        "wires": [
            [
                "33363070e09cf2a9"
            ]
        ]
    },
    {
        "id": "d530027f116818c1",
        "type": "ui_numeric",
        "z": "4d381f093e6152d7",
        "name": "marge",
        "label": "Marge",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 12,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "Marge",
        "topicType": "msg",
        "format": "{{value}} W",
        "min": 0,
        "max": "1000",
        "step": "50",
        "className": "",
        "x": 275,
        "y": 870,
        "wires": [
            [
                "393ffc7cce20893f",
                "f18bbc421154e39b"
            ]
        ]
    },
    {
        "id": "393ffc7cce20893f",
        "type": "change",
        "z": "4d381f093e6152d7",
        "name": "Marge",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Marge",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 415,
        "y": 870,
        "wires": [
            [
                "7899adbe2a1eebcb"
            ]
        ]
    },
    {
        "id": "7899adbe2a1eebcb",
        "type": "SumUltimate",
        "z": "4d381f093e6152d7",
        "name": "actual",
        "property": "payload",
        "math": "sum",
        "x": 565,
        "y": 855,
        "wires": [
            [
                "e10ec800de59a308"
            ]
        ]
    },
    {
        "id": "1e7d261aca599e4a",
        "type": "inject",
        "z": "4d381f093e6152d7",
        "name": "Last Used",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "last",
        "payloadType": "flow",
        "x": 130,
        "y": 870,
        "wires": [
            [
                "d530027f116818c1"
            ]
        ]
    },
    {
        "id": "535fb5d10b0076b6",
        "type": "change",
        "z": "4d381f093e6152d7",
        "d": true,
        "name": "Calc. Limit",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Calc. Lim.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 450,
        "wires": [
            [
                "c59a4826de33b176"
            ]
        ]
    },
    {
        "id": "f94783076c6de80d",
        "type": "debug",
        "z": "4d381f093e6152d7",
        "name": "debug 54",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1590,
        "y": 1050,
        "wires": []
    },
    {
        "id": "f18bbc421154e39b",
        "type": "change",
        "z": "4d381f093e6152d7",
        "name": "last",
        "rules": [
            {
                "t": "set",
                "p": "#:(storeInFile)::last",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 915,
        "wires": [
            []
        ]
    },
    {
        "id": "c356a71b5c47d773",
        "type": "link in",
        "z": "4d381f093e6152d7",
        "name": "AC solar pwr",
        "links": [
            "b07ce420a9bbb0b2"
        ],
        "x": 1530,
        "y": 210,
        "wires": [
            [
                "135e4857a7059990"
            ]
        ]
    },
    {
        "id": "a15dad10734b2395",
        "type": "comment",
        "z": "4d381f093e6152d7",
        "name": "Solar pwr in",
        "info": "",
        "x": 1465,
        "y": 165,
        "wires": []
    },
    {
        "id": "135e4857a7059990",
        "type": "change",
        "z": "4d381f093e6152d7",
        "name": "Ac power",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Solar Pwr",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1635,
        "y": 210,
        "wires": [
            [
                "8f20fb5ba0b3b05e"
            ]
        ]
    },
    {
        "id": "312100c039c3f9e5",
        "type": "delay",
        "z": "4d381f093e6152d7",
        "name": "",
        "pauseType": "rate",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1820,
        "y": 330,
        "wires": [
            [
                "042eae7bfd01841c"
            ]
        ]
    },
    {
        "id": "c59a4826de33b176",
        "type": "delay",
        "z": "4d381f093e6152d7",
        "d": true,
        "name": "",
        "pauseType": "rate",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1825,
        "y": 450,
        "wires": [
            []
        ]
    },
    {
        "id": "8f20fb5ba0b3b05e",
        "type": "delay",
        "z": "4d381f093e6152d7",
        "name": "",
        "pauseType": "rate",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1815,
        "y": 210,
        "wires": [
            [
                "042eae7bfd01841c"
            ]
        ]
    },
    {
        "id": "525392a2079d4ef5",
        "type": "subflow:606856dedc3c3155",
        "z": "4d381f093e6152d7",
        "name": "ANWB ",
        "env": [
            {
                "name": "type",
                "value": "today",
                "type": "str"
            }
        ],
        "x": 320,
        "y": 1410,
        "wires": [
            [
                "6ef8699b52640f09",
                "449492eb9d386ed9",
                "fcdf6e28b3ebc8d7"
            ]
        ]
    },
    {
        "id": "4747cf81018be6dc",
        "type": "inject",
        "z": "4d381f093e6152d7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "array",
                "v": "[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\"]",
                "vt": "json"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1410,
        "wires": [
            [
                "525392a2079d4ef5"
            ]
        ]
    },
    {
        "id": "fcdf6e28b3ebc8d7",
        "type": "debug",
        "z": "4d381f093e6152d7",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1410,
        "wires": []
    },
    {
        "id": "6ef8699b52640f09",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "Current Hour",
        "func": "//msg.payload = {};\n\nconst d = new Date();\nlet hour = d.getHours();\n//let value = payload.average();\n\n//var msg = payload.Prices[hour].price;\nmsg.payload = msg.array[hour];\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1450,
        "wires": [
            [
                "fcdf6e28b3ebc8d7"
            ]
        ]
    },
    {
        "id": "449492eb9d386ed9",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "Current Price",
        "func": "const d = new Date();\n\nvar hourOffset = 0\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;  // test values input after = ...//..\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1490,
        "wires": [
            [
                "fcdf6e28b3ebc8d7",
                "85378b28d741ce85",
                "55fce120dbf3c55c"
            ]
        ]
    },
    {
        "id": "87a47009f50dd682",
        "type": "ui_switch",
        "z": "4d381f093e6152d7",
        "name": "Dynamic Price Control",
        "label": "Dynamic Price Control",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 16,
        "width": 6,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "state",
        "topicType": "str",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 1210,
        "wires": [
            [
                "4f522625333c93f6",
                "edf091678bb9c376"
            ]
        ]
    },
    {
        "id": "4f522625333c93f6",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "Flow On/OFF",
        "func": "var state = context.get(\"state\") || \"off\";\n\n// Display initial state status\nif (state == \"on\") {\n    node.status({ fill: \"green\", shape: \"dot\", text: state });\n} else {\n    node.status({ fill: \"red\", shape: \"dot\", text: state });\n}\n\nif (msg.topic == \"state\") {\n    context.set(\"state\", msg.payload);\n    state = msg.payload;\n    // update status\n    if (state == \"on\") {\n        node.status({ fill: \"green\", shape: \"dot\", text: state });\n    } else {\n        node.status({ fill: \"red\", shape: \"dot\", text: state });\n    }\n} else {\n    if (state == \"on\") {\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\n//var max = 100;\n//return [{ payload:max}];",
        "libs": [],
        "x": 765,
        "y": 1255,
        "wires": [
            [
                "54e22c635a5a0b17",
                "ec92a1d03709eeda"
            ]
        ]
    },
    {
        "id": "85378b28d741ce85",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "Set PriceLimit and limit factor",
        "func": "var PriceLimit = 0           // in euro\n\n\nvar CurrentPrice = msg.payload;\n\nif (CurrentPrice < PriceLimit) {\n  var Limfactor = 5;\n} else if (CurrentPrice > PriceLimit) {\n  var Limfactor = 100;\n} else {\n  var Limfactor = 100;\n}\n\n\n\n\n\nreturn [{ payload: Limfactor }];\n\n\n\n\n//var Limfactor = (msg.payload.limit) / 5000;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 765,
        "y": 1365,
        "wires": [
            [
                "4f522625333c93f6"
            ]
        ]
    },
    {
        "id": "54e22c635a5a0b17",
        "type": "debug",
        "z": "4d381f093e6152d7",
        "name": "debug 56",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1065,
        "y": 1275,
        "wires": []
    },
    {
        "id": "edf091678bb9c376",
        "type": "function",
        "z": "4d381f093e6152d7",
        "name": "reset after off",
        "func": "var state = context.get(\"state\") || \"off\";\nvar max = 100;\n\nif (state == \"off\") {\n    return [{ payload: max }];\n\n}\n\n\n//var max = 100;\n//return [{ payload:max}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 765,
        "y": 1193.333251953125,
        "wires": [
            [
                "ec92a1d03709eeda"
            ]
        ]
    },
    {
        "id": "ed3a530bf78f5ce2",
        "type": "comment",
        "z": "4d381f093e6152d7",
        "name": "Dynamic Price Control",
        "info": "",
        "x": 530,
        "y": 1150,
        "wires": []
    },
    {
        "id": "55fce120dbf3c55c",
        "type": "ui_text",
        "z": "4d381f093e6152d7",
        "group": "4fb0db5cea9cd881",
        "order": 17,
        "width": 6,
        "height": 1,
        "name": "Current Price",
        "label": "Current Price",
        "format": "{{msg.payload}} euro",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 750,
        "y": 1485,
        "wires": []
    },
    {
        "id": "a079a885760ee403",
        "type": "ui_spacer",
        "z": "4d381f093e6152d7",
        "name": "spacer",
        "group": "dca5125.1377bf",
        "order": 1,
        "width": 2,
        "height": 1
    },
    {
        "id": "4b153a63afe51d0e",
        "type": "ui_spacer",
        "z": "4d381f093e6152d7",
        "name": "spacer",
        "group": "4fb0db5cea9cd881",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "87f5cb3e1e0d236c",
        "type": "ui_spacer",
        "z": "4d381f093e6152d7",
        "name": "spacer",
        "group": "4fb0db5cea9cd881",
        "order": 15,
        "width": 6,
        "height": 1
    },
    {
        "id": "67aa8a7899544f4d",
        "type": "modbus-client",
        "name": "SMA Modbus",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.178.4",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 3,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "4fb0db5cea9cd881",
        "type": "ui_group",
        "name": "SMA  settings",
        "tab": "cccf47e4.857ec8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "dca5125.1377bf",
        "type": "ui_group",
        "name": "Solar",
        "tab": "cccf47e4.857ec8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cccf47e4.857ec8",
        "type": "ui_tab",
        "name": "Energy",
        "icon": "battery_charging_60",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]