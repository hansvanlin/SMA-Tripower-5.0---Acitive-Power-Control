[
    {
        "id": "313477b4bcce1520",
        "type": "subflow",
        "name": "Configure Inverter Power",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 280,
                "y": 100,
                "wires": [
                    {
                        "id": "10da741dc2e31324"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#ffff00",
        "icon": "node-red/cog.svg",
        "status": {
            "x": 540,
            "y": 100,
            "wires": [
                {
                    "id": "313477b4bcce1520",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "10da741dc2e31324",
        "type": "function",
        "z": "313477b4bcce1520",
        "name": "Store Inverter Power",
        "func": "global.set(\"InverterPower\",msg.payload) ;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "cc76ce66bf92a589",
        "type": "function",
        "z": "313477b4bcce1520",
        "name": "function 3",
        "func": "var InvPwr = global.get(\"InverterPower\");\nmsg.payload = InvPwr;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 340,
        "wires": [
            [
                "8236e6deb595e284"
            ]
        ]
    },
    {
        "id": "8236e6deb595e284",
        "type": "debug",
        "z": "313477b4bcce1520",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 340,
        "wires": []
    },
    {
        "id": "89f9c56f98ee3131",
        "type": "inject",
        "z": "313477b4bcce1520",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "InverterPower",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 340,
        "wires": [
            [
                "cc76ce66bf92a589"
            ]
        ]
    },
    {
        "id": "a7ef04eed436a07d",
        "type": "subflow",
        "name": "Dynamic Power Control",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 380,
                "wires": [
                    {
                        "id": "19f187bd6c932f70"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 280,
                "wires": [
                    {
                        "id": "a29217b713daa166",
                        "port": 0
                    },
                    {
                        "id": "1322129e63173552",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "module": "Dynamic Power Control",
            "type": "Switch",
            "desc": "switches flow and control"
        },
        "color": "#00ff99",
        "icon": "node-red-dashboard/ui_switch.png",
        "status": {
            "x": 600,
            "y": 200,
            "wires": [
                {
                    "id": "0d33df4fd81ee9d7",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "0d33df4fd81ee9d7",
        "type": "ui_switch",
        "z": "a7ef04eed436a07d",
        "name": "Dynamic Control",
        "label": "Dynamic Control",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 14,
        "width": 6,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "state",
        "topicType": "str",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 360,
        "y": 320,
        "wires": [
            [
                "19f187bd6c932f70",
                "1322129e63173552"
            ]
        ]
    },
    {
        "id": "1322129e63173552",
        "type": "function",
        "z": "a7ef04eed436a07d",
        "name": "reset after off",
        "func": "var state = context.get(\"state\") || \"off\";\nvar max = 100;\n\nif (state == \"off\") {\n    return [{ payload: max }];\n\n}\n\n\n//var max = 100;\n//return [{ payload:max}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "19f187bd6c932f70",
        "type": "function",
        "z": "a7ef04eed436a07d",
        "name": "Flow On/OFF",
        "func": "var state = context.get(\"state\") || \"off\";\n\n// Display initial state status\nif (state == \"on\") {\n    node.status({ fill: \"green\", shape: \"dot\", text: state });\n} else {\n    node.status({ fill: \"red\", shape: \"dot\", text: state });\n}\n\nif (msg.topic == \"state\") {\n    context.set(\"state\", msg.payload);\n    state = msg.payload;\n    // update status\n    if (state == \"on\") {\n        node.status({ fill: \"green\", shape: \"dot\", text: state });\n    } else {\n        node.status({ fill: \"red\", shape: \"dot\", text: state });\n    }\n} else {\n    if (state == \"on\") {\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\n//var max = 100;\n//return [{ payload:max}];",
        "libs": [],
        "x": 620,
        "y": 380,
        "wires": [
            [
                "0e6326d92fd05514"
            ]
        ]
    },
    {
        "id": "0e6326d92fd05514",
        "type": "smooth",
        "z": "a7ef04eed436a07d",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "8",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 800,
        "y": 380,
        "wires": [
            [
                "a29217b713daa166"
            ]
        ]
    },
    {
        "id": "a29217b713daa166",
        "type": "delay",
        "z": "a7ef04eed436a07d",
        "name": "",
        "pauseType": "rate",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 950,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "e84e853b70479937",
        "type": "subflow",
        "name": "Power Limiter",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 220,
                "wires": [
                    {
                        "id": "687b22398148500f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1105,
                "y": 220,
                "wires": [
                    {
                        "id": "db598c03c8ee5f5c",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1105,
                "y": 280,
                "wires": [
                    {
                        "id": "bc3b1befa753cf29",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#00ff99",
        "inputLabels": [
            "Actual use input"
        ],
        "outputLabels": [
            "Output 0 - 100%",
            "Output in Watt"
        ],
        "icon": "node-red-dashboard/ui_slider.png"
    },
    {
        "id": "687b22398148500f",
        "type": "function",
        "z": "e84e853b70479937",
        "name": "Power limit factor",
        "func": "//var Marge = 400 ;\n//var Limfactor = (msg.payload + Marge) / 5000 ;\nvar factor = global.get(\"InverterPower\");\nvar Limfactor = (msg.payload) / factor ; // 5000;\nreturn [{ payload: Limfactor }];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 295,
        "y": 220,
        "wires": [
            [
                "61681b37092cdc2b"
            ]
        ]
    },
    {
        "id": "9c746973b4ad966c",
        "type": "function",
        "z": "e84e853b70479937",
        "name": "* 100",
        "func": "var lim = msg.payload *100 ;\nvar limit = Math.ceil(lim) ; \nreturn [{payload: limit}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 220,
        "wires": [
            [
                "db598c03c8ee5f5c"
            ]
        ]
    },
    {
        "id": "61681b37092cdc2b",
        "type": "function",
        "z": "e84e853b70479937",
        "name": "abs",
        "func": "var abs = Math.abs(msg.payload);\n\nreturn [{ payload: abs }]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 455,
        "y": 220,
        "wires": [
            [
                "9c746973b4ad966c"
            ]
        ]
    },
    {
        "id": "db598c03c8ee5f5c",
        "type": "function",
        "z": "e84e853b70479937",
        "name": "range (min-max)",
        "func": "var min = 0 ;\nvar max = 100 ;\n\nvar limit = msg.payload ;\n\nif (limit > max) {\n    limit = max;\n} else if (limit < min) {\n    limit = min;\n} \n\n\nreturn[{payload:limit}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 725,
        "y": 220,
        "wires": [
            [
                "bc3b1befa753cf29"
            ]
        ]
    },
    {
        "id": "bc3b1befa753cf29",
        "type": "function",
        "z": "e84e853b70479937",
        "name": "limit W",
        "func": "var factor = global.get(\"InverterPower\") / 100 ;\nvar lim = msg.payload * factor ; //50; // factor for 5kW  inverter\nreturn [{ payload: lim }];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 915,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "b50336c4abd4e6c7",
        "type": "subflow",
        "name": "Dynamic Price Control",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 380,
                "y": 360,
                "wires": [
                    {
                        "id": "0a8c320eb0430d02"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 820,
                "y": 360,
                "wires": [
                    {
                        "id": "2cf2f02f4f866a03",
                        "port": 0
                    },
                    {
                        "id": "0a8c320eb0430d02",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#00ff99",
        "icon": "node-red-dashboard/ui_switch.png",
        "status": {
            "x": 590,
            "y": 510,
            "wires": [
                {
                    "id": "738ead406e2b70ed",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "738ead406e2b70ed",
        "type": "ui_switch",
        "z": "b50336c4abd4e6c7",
        "name": "Dynamic Price Control",
        "label": "Dynamic Price Control",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 17,
        "width": 6,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "state",
        "topicType": "str",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 400,
        "y": 420,
        "wires": [
            [
                "0a8c320eb0430d02",
                "2cf2f02f4f866a03"
            ]
        ]
    },
    {
        "id": "2cf2f02f4f866a03",
        "type": "function",
        "z": "b50336c4abd4e6c7",
        "name": "reset after off",
        "func": "var state = context.get(\"state\") || \"off\";\nvar max = 100;\n\nif (state == \"off\") {\n    return [{ payload: max }];\n\n}\n\n\n//var max = 100;\n//return [{ payload:max}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "0a8c320eb0430d02",
        "type": "function",
        "z": "b50336c4abd4e6c7",
        "name": "Flow On/OFF",
        "func": "var state = context.get(\"state\") || \"off\";\n\n// Display initial state status\nif (state == \"on\") {\n    node.status({ fill: \"green\", shape: \"dot\", text: state });\n} else {\n    node.status({ fill: \"red\", shape: \"dot\", text: state });\n}\n\nif (msg.topic == \"state\") {\n    context.set(\"state\", msg.payload);\n    state = msg.payload;\n    // update status\n    if (state == \"on\") {\n        node.status({ fill: \"green\", shape: \"dot\", text: state });\n    } else {\n        node.status({ fill: \"red\", shape: \"dot\", text: state });\n    }\n} else {\n    if (state == \"on\") {\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\n//var max = 100;\n//return [{ payload:max}];",
        "libs": [],
        "x": 640,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "0a8c8aee952c418d",
        "type": "subflow",
        "name": "Price Limiter",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 205,
                "y": 135,
                "wires": [
                    {
                        "id": "b23f0d5c4e6ba8fe"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1185,
                "y": 135,
                "wires": [
                    {
                        "id": "c796a4144c1d7492",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1185,
                "y": 240,
                "wires": [
                    {
                        "id": "0e5ddd236078064d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#00ff99",
        "inputLabels": [
            "Current Price Input"
        ],
        "outputLabels": [
            "Output 5 or 100% ",
            "Output PriceLimit"
        ],
        "icon": "node-red-dashboard/ui_slider.png",
        "status": {
            "x": 680,
            "y": 270,
            "wires": [
                {
                    "id": "93cbcb7205be7a58",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "b23f0d5c4e6ba8fe",
        "type": "change",
        "z": "0a8c8aee952c418d",
        "name": "CurrentPrice",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "CurrentPrice",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 425,
        "y": 135,
        "wires": [
            [
                "0e5ddd236078064d"
            ]
        ]
    },
    {
        "id": "0e5ddd236078064d",
        "type": "Comparator",
        "z": "0a8c8aee952c418d",
        "name": "Comparator",
        "property": "payload",
        "math": "<=",
        "topic1": "CurrentPrice",
        "topic2": "PriceLimit",
        "x": 625,
        "y": 135,
        "wires": [
            [
                "c796a4144c1d7492"
            ]
        ]
    },
    {
        "id": "a421feb9bea972e7",
        "type": "inject",
        "z": "0a8c8aee952c418d",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "#:(storeInFile)::PriceLimit",
        "payloadType": "global",
        "x": 210,
        "y": 210,
        "wires": [
            [
                "93cbcb7205be7a58"
            ]
        ]
    },
    {
        "id": "c796a4144c1d7492",
        "type": "function",
        "z": "0a8c8aee952c418d",
        "name": "Power Limit 0 or 100 %",
        "func": "var compare = msg.payload ;\n\nswitch(compare) {\n  case true:\n    var Limfactor = 5\n    break;\n  case false:\n    var Limfactor = 100\n    break;\n  default:\n    var Limfactor = 100\n}\n\n\n\nreturn [{ payload: Limfactor }];\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 135,
        "wires": [
            []
        ]
    },
    {
        "id": "f5b19e15ce03902d",
        "type": "change",
        "z": "0a8c8aee952c418d",
        "name": "Last",
        "rules": [
            {
                "t": "set",
                "p": "#:(storeInFile)::PriceLimit",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 270,
        "wires": [
            []
        ]
    },
    {
        "id": "93cbcb7205be7a58",
        "type": "ui_slider",
        "z": "0a8c8aee952c418d",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 19,
        "width": 6,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "PriceLimit",
        "topicType": "str",
        "min": "-0.75",
        "max": "0.75",
        "step": "0.01",
        "className": "",
        "x": 415,
        "y": 210,
        "wires": [
            [
                "f5b19e15ce03902d",
                "0e5ddd236078064d"
            ]
        ]
    },
    {
        "id": "f1a92947daed588e",
        "type": "inject",
        "z": "0a8c8aee952c418d",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "#:(storeInFile)::CurrentPrice",
        "payloadType": "global",
        "x": 205,
        "y": 60,
        "wires": [
            [
                "b23f0d5c4e6ba8fe"
            ]
        ]
    },
    {
        "id": "e3e41cc9ed85942e",
        "type": "subflow",
        "name": "Prices",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 410,
                "y": 330,
                "wires": [
                    {
                        "id": "8c93fd69c2316975"
                    },
                    {
                        "id": "23e51d1330daf4a8"
                    },
                    {
                        "id": "cd55e6bab733c0bd"
                    },
                    {
                        "id": "ed49c28feaf5efea"
                    },
                    {
                        "id": "264de6e02e6e6b02"
                    },
                    {
                        "id": "7136376d69c5f3fc"
                    },
                    {
                        "id": "ab085b342055e85e"
                    },
                    {
                        "id": "f1be3913bfdaa499"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 930,
                "y": 420,
                "wires": [
                    {
                        "id": "23e51d1330daf4a8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 920,
                "y": 480,
                "wires": [
                    {
                        "id": "cd55e6bab733c0bd",
                        "port": 0
                    }
                ]
            },
            {
                "x": 910,
                "y": 540,
                "wires": [
                    {
                        "id": "ed49c28feaf5efea",
                        "port": 0
                    }
                ]
            },
            {
                "x": 910,
                "y": 600,
                "wires": [
                    {
                        "id": "264de6e02e6e6b02",
                        "port": 0
                    }
                ]
            },
            {
                "x": 910,
                "y": 660,
                "wires": [
                    {
                        "id": "7136376d69c5f3fc",
                        "port": 0
                    }
                ]
            },
            {
                "x": 910,
                "y": 720,
                "wires": [
                    {
                        "id": "ab085b342055e85e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#00ff99",
        "inputLabels": [
            "Price input"
        ],
        "outputLabels": [
            "Current Price",
            "Next Hour",
            "+2h",
            "+3h",
            "+4h",
            "+5h"
        ],
        "icon": "font-awesome/fa-eur",
        "status": {
            "x": 980,
            "y": 360,
            "wires": [
                {
                    "id": "23e51d1330daf4a8",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "8c93fd69c2316975",
        "type": "function",
        "z": "e3e41cc9ed85942e",
        "name": "Current Hour",
        "func": "//msg.payload = {};\n\nconst d = new Date();\nlet hour = d.getHours();\n//let value = payload.average();\n\n//var msg = payload.Prices[hour].price;\nmsg.payload = msg.array[hour];\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 270,
        "wires": [
            [
                "f1be3913bfdaa499"
            ]
        ]
    },
    {
        "id": "23e51d1330daf4a8",
        "type": "function",
        "z": "e3e41cc9ed85942e",
        "name": "Current Price",
        "func": "const d = new Date();\n\nvar hourOffset = 0\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 655,
        "y": 390,
        "wires": [
            [
                "f1be3913bfdaa499",
                "d5fd8d8c86b6686e"
            ]
        ]
    },
    {
        "id": "cd55e6bab733c0bd",
        "type": "function",
        "z": "e3e41cc9ed85942e",
        "name": "Next Hour",
        "func": "const d = new Date();\n\nvar hourOffset = 1\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "ed49c28feaf5efea",
        "type": "function",
        "z": "e3e41cc9ed85942e",
        "name": "+2",
        "func": "const d = new Date();\n\nvar hourOffset = 2\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "264de6e02e6e6b02",
        "type": "function",
        "z": "e3e41cc9ed85942e",
        "name": "+3",
        "func": "const d = new Date();\n\nvar hourOffset = 3\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "7136376d69c5f3fc",
        "type": "function",
        "z": "e3e41cc9ed85942e",
        "name": "+4",
        "func": "const d = new Date();\n\nvar hourOffset = 4\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "ab085b342055e85e",
        "type": "function",
        "z": "e3e41cc9ed85942e",
        "name": "+5",
        "func": "const d = new Date();\n\nvar hourOffset = 5\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "f1be3913bfdaa499",
        "type": "debug",
        "z": "e3e41cc9ed85942e",
        "name": "debug 61",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 825,
        "y": 330,
        "wires": []
    },
    {
        "id": "d5fd8d8c86b6686e",
        "type": "change",
        "z": "e3e41cc9ed85942e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(storeInFile)::CurrentPrice",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 435,
        "wires": [
            []
        ]
    },
    {
        "id": "606856dedc3c3155",
        "type": "subflow",
        "name": "Energy zero",
        "info": "This subflow uses the energy zero API for retrieving the hourly energy prices from the API of https://www.energyzero.nl/ for either today or the next day. \nThese are the prices as they are used by the Dutch energy providers ANWB energie, Energie van Ons and others.\n\nIn order not to load the API too heavy a rate limiter of 1 query per 15 minutes has been added to the subflow.\n\nDo note that tomorrows prices can be queried after 15:00, so there is a delay built in the\nnode that handles that.\n\n# Configuration\n\nPrice information can be retrieved for either today or tomorrow (default). It\nis also possible set if the prices should be retrieved including (default) or excluding tax.\n\n# Input\n\nIt triggers when injecting a message into the node.\n\n# Output\n\nThe output is an object with the result and a status message stored into the `msg.payload`.\n\nMost important is the `msg.payload.result`, which contains the estimated production of the panels. E.g.:\n\n```\npayload: object\n  Prices: array[24]\n    [0 … 9]\n    [10 … 19]\n    [20 … 23]\n      20: object\n        price: 0.15\n        readingDate: \"2023-01-04T19:00:00Z\"\n      21: object\n      22: object\n      23: object\n  intervalType: 4\n  average: 0.12\n  fromDate: \"2023-01-03T23:00:00Z\"\n  tillDate: \"2023-01-04T22:59:59.999Z\"\n```\n\nThe `msg.payload.average` gives the average price.\n\n# Status\n\nIn order not to load the api too much a rate limit has been added to maximize\nqueries once per 15 minutes. The status message turns green when a query is\nallowed and red if it is not allowed.\n\nIf the delay is active (tomorrows prices can be queried after 15:00), the\nnode will show that and wait until 15:00 before passing the message.\n",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "a9b924145a848962"
                    },
                    {
                        "id": "b334a8b682a71c89"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1120,
                "y": 80,
                "wires": [
                    {
                        "id": "e18a1bf3efb367ed",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "type",
                "type": "str",
                "value": "tomorrow",
                "ui": {
                    "icon": "font-awesome/fa-calendar",
                    "label": {
                        "en-US": "Type"
                    },
                    "type": "select",
                    "opts": {
                        "opts": [
                            {
                                "l": {
                                    "en-US": "Today"
                                },
                                "v": "today"
                            },
                            {
                                "l": {
                                    "en-US": "Tomorrow"
                                },
                                "v": "tomorrow"
                            }
                        ]
                    }
                }
            },
            {
                "name": "inctax",
                "type": "bool",
                "value": "true",
                "ui": {
                    "icon": "font-awesome/fa-money",
                    "label": {
                        "en-US": "Inc. tax"
                    },
                    "type": "checkbox"
                }
            }
        ],
        "meta": {
            "module": "Energy zero",
            "version": "0.0.2",
            "author": "Dirk-Jan Faber <dfaber@victronenergy.com>",
            "desc": "Query the Energy Zero API",
            "keywords": "energy zero, anwb, victron",
            "license": "GPL-3.0"
        },
        "color": "#00bb00",
        "icon": "font-awesome/fa-sun-o",
        "status": {
            "x": 940,
            "y": 240,
            "wires": [
                {
                    "id": "b334a8b682a71c89",
                    "port": 0
                },
                {
                    "id": "068f0a5f1387bb4d",
                    "port": 0
                },
                {
                    "id": "3bcc1815a160e167",
                    "port": 0
                },
                {
                    "id": "e2381fe37dc1077e",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "9f2d19adc6e5b187",
        "type": "http request",
        "z": "606856dedc3c3155",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 810,
        "y": 80,
        "wires": [
            [
                "e18a1bf3efb367ed"
            ]
        ]
    },
    {
        "id": "cc136d99da0c303f",
        "type": "function",
        "z": "606856dedc3c3155",
        "name": "create energyzero url",
        "func": "msg.url = 'https://api.energyzero.nl/v1/energyprices';\nvar offset = 0;\nmsg.delay = 0;\nvar start = new Date();\n\nif (env.get('type') == 'tomorrow') {\n    offset = 24;\n    const targetTime = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 15, 0, 0);\n    msg.delay = targetTime.getTime() - start.getTime();\n}\n\nstart.setUTCHours(0 + offset, start.getTimezoneOffset(), 0, 0);\nmsg.url += '?fromDate=' + start.toISOString();\n\nvar end = new Date();\nend.setUTCHours(23 + offset, start.getTimezoneOffset()+59, 59, 999);\nmsg.url += '&tillDate=' + end.toISOString();\n\nmsg.url += '&interval=4&usageType=1'\n\nif (env.get('inctax')) {\n    msg.url += '&inclBtw=true'\n} else {\n    msg.url += '&inclBtw=false'\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 80,
        "wires": [
            [
                "f378c36d46b3d835",
                "a49389ad67e3f18a"
            ]
        ]
    },
    {
        "id": "e18a1bf3efb367ed",
        "type": "json",
        "z": "606856dedc3c3155",
        "name": "Convert to json",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 980,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a9b924145a848962",
        "type": "delay",
        "z": "606856dedc3c3155",
        "name": "1 msg/15 seconds",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "15",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 190,
        "y": 80,
        "wires": [
            [
                "cc136d99da0c303f",
                "efc16e4e005fba73"
            ]
        ]
    },
    {
        "id": "efc16e4e005fba73",
        "type": "delay",
        "z": "606856dedc3c3155",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 220,
        "wires": [
            [
                "068f0a5f1387bb4d"
            ]
        ]
    },
    {
        "id": "b334a8b682a71c89",
        "type": "change",
        "z": "606856dedc3c3155",
        "name": "rate limit active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"fill\": \"yellow\", \"text\": \"Rate limiter active\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "068f0a5f1387bb4d",
        "type": "change",
        "z": "606856dedc3c3155",
        "name": "rate limit inactive",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"fill\": \"green\", \"text\": \"Ok\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a370903c9c36f49b",
        "type": "inject",
        "z": "606856dedc3c3155",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 260,
        "wires": [
            [
                "068f0a5f1387bb4d"
            ]
        ]
    },
    {
        "id": "f378c36d46b3d835",
        "type": "delay",
        "z": "606856dedc3c3155",
        "name": "Optional delay",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 80,
        "wires": [
            [
                "9f2d19adc6e5b187",
                "e2381fe37dc1077e"
            ]
        ]
    },
    {
        "id": "a49389ad67e3f18a",
        "type": "switch",
        "z": "606856dedc3c3155",
        "name": "",
        "property": "delay",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 160,
        "wires": [
            [
                "3bcc1815a160e167"
            ]
        ]
    },
    {
        "id": "3bcc1815a160e167",
        "type": "change",
        "z": "606856dedc3c3155",
        "name": "delay",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"fill\": \"yellow\", \"text\": \"Delaying until 15.00\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e2381fe37dc1077e",
        "type": "change",
        "z": "606856dedc3c3155",
        "name": "Ok",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"fill\": \"green\", \"text\": \"Ok\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "f34244a457cec8bc",
        "type": "tab",
        "label": "SMA Sunny Tripower 5.0",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4c2b7af191dc75bd",
        "type": "modbus-write",
        "z": "f34244a457cec8bc",
        "name": "SMA Modbus Write 40023 ( Limit )",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "3",
        "dataType": "HoldingRegister",
        "adr": "40023",
        "quantity": "1",
        "server": "67aa8a7899544f4d",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1600,
        "y": 810,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9f9327298be0f36f",
        "type": "inject",
        "z": "f34244a457cec8bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 210,
        "wires": [
            [
                "c935fcc8ea0eaef9"
            ]
        ]
    },
    {
        "id": "c935fcc8ea0eaef9",
        "type": "modbus-getter",
        "z": "f34244a457cec8bc",
        "name": "SMA Modbus (41255) Power",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "3",
        "dataType": "HoldingRegister",
        "adr": "41255",
        "quantity": "2",
        "server": "67aa8a7899544f4d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 375,
        "y": 210,
        "wires": [
            [
                "7c5cbd8a904d8d18",
                "824608bd1c7f1e0c"
            ],
            []
        ]
    },
    {
        "id": "9d0faa0b14463d4e",
        "type": "ui_text",
        "z": "f34244a457cec8bc",
        "group": "4fb0db5cea9cd881",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Power limit %",
        "label": "SMA Power Limit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 920,
        "y": 175,
        "wires": []
    },
    {
        "id": "7c5cbd8a904d8d18",
        "type": "function",
        "z": "f34244a457cec8bc",
        "name": "Power Limit",
        "func": "var limit = msg.payload[0] /100;\n\n\n\nreturn [{ payload: limit }]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 175,
        "wires": [
            [
                "9d0faa0b14463d4e"
            ]
        ]
    },
    {
        "id": "e5cc7bd38072906b",
        "type": "ui_slider",
        "z": "f34244a457cec8bc",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "5",
        "max": "100",
        "step": "5",
        "className": "",
        "x": 1210,
        "y": 810,
        "wires": [
            [
                "21401208454f5c81",
                "51ca0fdb074ab6ce"
            ]
        ]
    },
    {
        "id": "de68c865a499505f",
        "type": "ui_text",
        "z": "f34244a457cec8bc",
        "group": "4fb0db5cea9cd881",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "W",
        "label": "",
        "format": "{{msg.payload}} W",
        "layout": "row-right",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 950,
        "y": 235,
        "wires": []
    },
    {
        "id": "824608bd1c7f1e0c",
        "type": "function",
        "z": "f34244a457cec8bc",
        "name": "Power Limit % to W , sma 5kW",
        "func": "var factor = global.get(\"InverterPower\") /10000 ;\n\nvar pro = msg.payload[0] * factor ; // 0.5; // factor 0.5 for 5kW  inverter\n\n\n\nreturn [{ payload: pro }]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 235,
        "wires": [
            [
                "de68c865a499505f",
                "0f3d812d365dc862"
            ]
        ]
    },
    {
        "id": "21401208454f5c81",
        "type": "function",
        "z": "f34244a457cec8bc",
        "name": "* 100",
        "func": "var lim = msg.payload *100;\nreturn [{payload: lim}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 810,
        "wires": [
            [
                "4c2b7af191dc75bd"
            ]
        ]
    },
    {
        "id": "51ca0fdb074ab6ce",
        "type": "function",
        "z": "f34244a457cec8bc",
        "name": "% to Watt , sma 5kW",
        "func": "var factor = global.get(\"InverterPower\") / 100 ;\nvar lim = msg.payload * factor ; //50; // factor for 5kW  inverter\nreturn [{payload: lim}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 910,
        "wires": [
            [
                "927bf074b2684d25"
            ]
        ]
    },
    {
        "id": "927bf074b2684d25",
        "type": "ui_text",
        "z": "f34244a457cec8bc",
        "group": "4fb0db5cea9cd881",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "set:",
        "label": "",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#19e119",
        "x": 1610,
        "y": 910,
        "wires": []
    },
    {
        "id": "b8167e03706eb186",
        "type": "comment",
        "z": "f34244a457cec8bc",
        "name": "Read Modbus values",
        "info": "",
        "x": 380,
        "y": 175,
        "wires": []
    },
    {
        "id": "bcc55ca72c992555",
        "type": "comment",
        "z": "f34244a457cec8bc",
        "name": "Write Modbus Register",
        "info": "",
        "x": 1585,
        "y": 770,
        "wires": []
    },
    {
        "id": "27af7e795f66095a",
        "type": "comment",
        "z": "f34244a457cec8bc",
        "name": "Dynamic Power Control ",
        "info": "",
        "x": 595,
        "y": 585,
        "wires": []
    },
    {
        "id": "fb7b699f3340464f",
        "type": "link in",
        "z": "f34244a457cec8bc",
        "name": "actual use in 1",
        "links": [
            "b792982110625bd6"
        ],
        "x": 180,
        "y": 480,
        "wires": [
            [
                "e8333f72d6036c58",
                "8e7f349a33dd0715",
                "db7c3404b447f4c4"
            ]
        ]
    },
    {
        "id": "f4ad87f85361b717",
        "type": "comment",
        "z": "f34244a457cec8bc",
        "name": "actual use in",
        "info": "",
        "x": 85,
        "y": 480,
        "wires": []
    },
    {
        "id": "e8333f72d6036c58",
        "type": "ui_text",
        "z": "f34244a457cec8bc",
        "group": "4fb0db5cea9cd881",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "Actual",
        "label": "Actual Use",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#0a95eb",
        "x": 575,
        "y": 480,
        "wires": []
    },
    {
        "id": "6ea55e474793432d",
        "type": "ui_text",
        "z": "f34244a457cec8bc",
        "group": "4fb0db5cea9cd881",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "Dynamic Limit",
        "label": "Calc. Dynamic Limit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffcb13",
        "x": 875,
        "y": 665,
        "wires": []
    },
    {
        "id": "d816a816ae2c790c",
        "type": "comment",
        "z": "f34244a457cec8bc",
        "name": "Manual P-limit",
        "info": "",
        "x": 1215,
        "y": 750,
        "wires": []
    },
    {
        "id": "77a6bdbd65aa6e40",
        "type": "inject",
        "z": "f34244a457cec8bc",
        "name": "Daily reset to 100%",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 920,
        "y": 810,
        "wires": [
            [
                "e5cc7bd38072906b"
            ]
        ]
    },
    {
        "id": "9e54b168de34bb7c",
        "type": "ui_text",
        "z": "f34244a457cec8bc",
        "group": "4fb0db5cea9cd881",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "W",
        "label": "",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffcb13",
        "x": 845,
        "y": 705,
        "wires": []
    },
    {
        "id": "63aa50ebc1332231",
        "type": "ui_chart",
        "z": "f34244a457cec8bc",
        "name": "",
        "group": "4fb0db5cea9cd881",
        "order": 1,
        "width": 6,
        "height": 5,
        "label": "SMA Tripower 5.0",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#21a1de",
            "#19e119",
            "#ffcb13",
            "#ff7d0f",
            "#98df8a",
            "#c3f05a",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1725,
        "y": 430,
        "wires": [
            []
        ]
    },
    {
        "id": "0f3d812d365dc862",
        "type": "change",
        "z": "f34244a457cec8bc",
        "d": true,
        "name": "Powerlimit",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "P-Limit",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1305,
        "y": 430,
        "wires": [
            [
                "63aa50ebc1332231"
            ]
        ]
    },
    {
        "id": "bfe274b1563667ad",
        "type": "change",
        "z": "f34244a457cec8bc",
        "name": "Actual Use",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Act. Use",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1305,
        "y": 480,
        "wires": [
            [
                "19ddb110b949e0e5"
            ]
        ]
    },
    {
        "id": "8e7f349a33dd0715",
        "type": "function",
        "z": "f34244a457cec8bc",
        "name": "Actual use",
        "func": "\nvar Actual = msg.payload ;\nreturn [{ payload: Actual }];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 480,
        "wires": [
            [
                "bfe274b1563667ad"
            ]
        ]
    },
    {
        "id": "3e0ff93a3b4b6161",
        "type": "ui_numeric",
        "z": "f34244a457cec8bc",
        "name": "marge",
        "label": "Marge",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 12,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "Marge",
        "topicType": "msg",
        "format": "{{value}} W",
        "min": 0,
        "max": "1000",
        "step": "50",
        "className": "",
        "x": 245,
        "y": 705,
        "wires": [
            [
                "5e4e6ece3093d177",
                "03513a8f48d169b8"
            ]
        ]
    },
    {
        "id": "5e4e6ece3093d177",
        "type": "change",
        "z": "f34244a457cec8bc",
        "name": "Marge",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Marge",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 365,
        "y": 705,
        "wires": [
            [
                "db7c3404b447f4c4"
            ]
        ]
    },
    {
        "id": "db7c3404b447f4c4",
        "type": "SumUltimate",
        "z": "f34244a457cec8bc",
        "name": "actual",
        "property": "payload",
        "math": "sum",
        "x": 505,
        "y": 685,
        "wires": [
            [
                "75a7448cf234d9d1"
            ]
        ]
    },
    {
        "id": "94ac2174424f96d8",
        "type": "inject",
        "z": "f34244a457cec8bc",
        "name": "Last Used",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "last",
        "payloadType": "flow",
        "x": 105,
        "y": 705,
        "wires": [
            [
                "3e0ff93a3b4b6161"
            ]
        ]
    },
    {
        "id": "7daf3ef8c0326909",
        "type": "change",
        "z": "f34244a457cec8bc",
        "d": true,
        "name": "Calc. Limit",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Calc. Lim.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1305,
        "y": 540,
        "wires": [
            [
                "84caa46bedfdae87"
            ]
        ]
    },
    {
        "id": "03513a8f48d169b8",
        "type": "change",
        "z": "f34244a457cec8bc",
        "name": "last",
        "rules": [
            {
                "t": "set",
                "p": "#:(storeInFile)::last",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 365,
        "y": 745,
        "wires": [
            []
        ]
    },
    {
        "id": "a101c9fb5896bfdc",
        "type": "link in",
        "z": "f34244a457cec8bc",
        "name": "AC solar pwr",
        "links": [
            "b07ce420a9bbb0b2"
        ],
        "x": 1200,
        "y": 370,
        "wires": [
            [
                "5b6d6267bbec2bc1"
            ]
        ]
    },
    {
        "id": "cb54ced6d1396f94",
        "type": "comment",
        "z": "f34244a457cec8bc",
        "name": "Solar pwr in",
        "info": "",
        "x": 1105,
        "y": 370,
        "wires": []
    },
    {
        "id": "5b6d6267bbec2bc1",
        "type": "change",
        "z": "f34244a457cec8bc",
        "name": "Ac power",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Solar Pwr",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1295,
        "y": 370,
        "wires": [
            [
                "5370d5fdfacf5576",
                "1b9180c765145119"
            ]
        ]
    },
    {
        "id": "19ddb110b949e0e5",
        "type": "delay",
        "z": "f34244a457cec8bc",
        "name": "",
        "pauseType": "rate",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1475,
        "y": 480,
        "wires": [
            [
                "63aa50ebc1332231"
            ]
        ]
    },
    {
        "id": "84caa46bedfdae87",
        "type": "delay",
        "z": "f34244a457cec8bc",
        "d": true,
        "name": "",
        "pauseType": "rate",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1475,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "5370d5fdfacf5576",
        "type": "delay",
        "z": "f34244a457cec8bc",
        "name": "",
        "pauseType": "rate",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1465,
        "y": 370,
        "wires": [
            [
                "63aa50ebc1332231"
            ]
        ]
    },
    {
        "id": "b93b1cfa29a5bb66",
        "type": "subflow:606856dedc3c3155",
        "z": "f34244a457cec8bc",
        "name": "ANWB ",
        "env": [
            {
                "name": "type",
                "value": "today",
                "type": "str"
            }
        ],
        "x": 305,
        "y": 1065,
        "wires": [
            [
                "719ee7b0d15fd181"
            ]
        ]
    },
    {
        "id": "254726ae7475b886",
        "type": "inject",
        "z": "f34244a457cec8bc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "array",
                "v": "[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\"]",
                "vt": "json"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1065,
        "wires": [
            [
                "b93b1cfa29a5bb66"
            ]
        ]
    },
    {
        "id": "a72f503e8e5b975d",
        "type": "comment",
        "z": "f34244a457cec8bc",
        "name": "Dynamic Price Control",
        "info": "",
        "x": 580,
        "y": 900,
        "wires": []
    },
    {
        "id": "3a7a0bf81a896848",
        "type": "ui_text",
        "z": "f34244a457cec8bc",
        "group": "4fb0db5cea9cd881",
        "order": 20,
        "width": 6,
        "height": 1,
        "name": "Current Price",
        "label": "Current Price",
        "format": "{{msg.payload}} euro",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 665,
        "y": 1035,
        "wires": []
    },
    {
        "id": "f94e6e88a888a1ec",
        "type": "ui_text",
        "z": "f34244a457cec8bc",
        "group": "4fb0db5cea9cd881",
        "order": 21,
        "width": 6,
        "height": 1,
        "name": "Next hour",
        "label": "Next hour",
        "format": "{{msg.payload}} euro",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 660,
        "y": 1095,
        "wires": []
    },
    {
        "id": "31677d88c4738650",
        "type": "ui_text",
        "z": "f34244a457cec8bc",
        "group": "4fb0db5cea9cd881",
        "order": 22,
        "width": 6,
        "height": 1,
        "name": "Price +2h",
        "label": "Price: +2h",
        "format": "{{msg.payload}} euro",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 660,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f7b27103e8d33901",
        "type": "ui_text",
        "z": "f34244a457cec8bc",
        "d": true,
        "group": "4fb0db5cea9cd881",
        "order": 23,
        "width": 6,
        "height": 1,
        "name": "Price +3h",
        "label": "Price +3h",
        "format": "{{msg.payload}} euro",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 660,
        "y": 1185,
        "wires": []
    },
    {
        "id": "719ee7b0d15fd181",
        "type": "subflow:e3e41cc9ed85942e",
        "z": "f34244a457cec8bc",
        "name": "",
        "x": 430,
        "y": 1065,
        "wires": [
            [
                "3a7a0bf81a896848",
                "c863856bf83c0312"
            ],
            [
                "f94e6e88a888a1ec"
            ],
            [
                "31677d88c4738650"
            ],
            [
                "f7b27103e8d33901"
            ],
            [],
            []
        ]
    },
    {
        "id": "c863856bf83c0312",
        "type": "subflow:0a8c8aee952c418d",
        "z": "f34244a457cec8bc",
        "name": "",
        "x": 640,
        "y": 960,
        "wires": [
            [
                "8249754508fe8a47"
            ],
            []
        ]
    },
    {
        "id": "8249754508fe8a47",
        "type": "subflow:b50336c4abd4e6c7",
        "z": "f34244a457cec8bc",
        "name": "",
        "x": 870,
        "y": 940,
        "wires": [
            [
                "e5cc7bd38072906b"
            ]
        ]
    },
    {
        "id": "75a7448cf234d9d1",
        "type": "subflow:e84e853b70479937",
        "z": "f34244a457cec8bc",
        "name": "",
        "x": 665,
        "y": 645,
        "wires": [
            [
                "6ea55e474793432d",
                "b5dd9b6437ecfe83"
            ],
            [
                "9e54b168de34bb7c"
            ]
        ]
    },
    {
        "id": "4493c5a2114b0b61",
        "type": "inject",
        "z": "f34244a457cec8bc",
        "d": true,
        "name": "test actual use in",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3333",
        "payloadType": "num",
        "x": 725,
        "y": 370,
        "wires": [
            [
                "e8333f72d6036c58",
                "8e7f349a33dd0715",
                "75a7448cf234d9d1"
            ]
        ],
        "icon": "font-awesome/fa-wrench"
    },
    {
        "id": "b5dd9b6437ecfe83",
        "type": "subflow:a7ef04eed436a07d",
        "z": "f34244a457cec8bc",
        "name": "",
        "x": 895,
        "y": 605,
        "wires": [
            [
                "e5cc7bd38072906b"
            ]
        ]
    },
    {
        "id": "3cf09e7bf0a3e692",
        "type": "inject",
        "z": "f34244a457cec8bc",
        "d": true,
        "name": "test solar in",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4589",
        "payloadType": "num",
        "x": 725,
        "y": 290,
        "wires": [
            [
                "5b6d6267bbec2bc1"
            ]
        ],
        "icon": "font-awesome/fa-wrench"
    },
    {
        "id": "d7a89a3bcac781c6",
        "type": "comment",
        "z": "f34244a457cec8bc",
        "name": "TESTING VALUES",
        "info": "",
        "x": 705,
        "y": 330,
        "wires": []
    },
    {
        "id": "2ee488159a584c41",
        "type": "inject",
        "z": "f34244a457cec8bc",
        "name": "Set Inverter Power Here (Watt)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "5000",
        "payloadType": "num",
        "x": 170,
        "y": 90,
        "wires": [
            [
                "0d89c1d8f3f40bc4"
            ]
        ],
        "icon": "node-red/cog.svg"
    },
    {
        "id": "0d89c1d8f3f40bc4",
        "type": "subflow:313477b4bcce1520",
        "z": "f34244a457cec8bc",
        "name": "",
        "x": 450,
        "y": 90,
        "wires": []
    },
    {
        "id": "1504305e82d1e4c7",
        "type": "comment",
        "z": "f34244a457cec8bc",
        "name": "CONFIG INVERTER POWER",
        "info": "",
        "x": 140,
        "y": 30,
        "wires": []
    },
    {
        "id": "1b9180c765145119",
        "type": "ui_text",
        "z": "f34244a457cec8bc",
        "group": "4fb0db5cea9cd881",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Solar Power",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#19e119",
        "x": 1470,
        "y": 305,
        "wires": []
    },
    {
        "id": "827890888d4bb636",
        "type": "ui_spacer",
        "z": "f34244a457cec8bc",
        "name": "spacer",
        "group": "dca5125.1377bf",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "9e6f2cc988648a22",
        "type": "ui_spacer",
        "z": "f34244a457cec8bc",
        "name": "spacer",
        "group": "4fb0db5cea9cd881",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "6d220430478a64df",
        "type": "ui_spacer",
        "z": "f34244a457cec8bc",
        "name": "spacer",
        "group": "4fb0db5cea9cd881",
        "order": 15,
        "width": 6,
        "height": 1
    },
    {
        "id": "67aa8a7899544f4d",
        "type": "modbus-client",
        "name": "SMA Modbus",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.178.4",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 3,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "4fb0db5cea9cd881",
        "type": "ui_group",
        "name": "SMA  settings",
        "tab": "cccf47e4.857ec8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "dca5125.1377bf",
        "type": "ui_group",
        "name": "Solar",
        "tab": "cccf47e4.857ec8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cccf47e4.857ec8",
        "type": "ui_tab",
        "name": "Energy",
        "icon": "battery_charging_60",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]