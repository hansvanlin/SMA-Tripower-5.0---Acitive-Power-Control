[
    {
        "id": "6feba42912222ac6",
        "type": "subflow",
        "name": "Stored Inverter Power",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 280,
                "y": 100,
                "wires": [
                    {
                        "id": "f8cadadc8b530577"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#ffff00",
        "icon": "node-red/cog.svg",
        "status": {
            "x": 540,
            "y": 100,
            "wires": [
                {
                    "id": "6feba42912222ac6",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "f8cadadc8b530577",
        "type": "function",
        "z": "6feba42912222ac6",
        "name": "Store Inverter Power",
        "func": "global.set(\"InverterPower\",msg.payload) ;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ed883b7103a2edda",
        "type": "function",
        "z": "6feba42912222ac6",
        "name": "Read Stored Power from storage",
        "func": "var InvPwr = global.get(\"InverterPower\");\nmsg.payload = InvPwr;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 340,
        "wires": [
            [
                "a6d7436d654d3f9e"
            ]
        ]
    },
    {
        "id": "a6d7436d654d3f9e",
        "type": "debug",
        "z": "6feba42912222ac6",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 340,
        "wires": []
    },
    {
        "id": "aeeb8e3bbdc2bfcd",
        "type": "inject",
        "z": "6feba42912222ac6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "InverterPower",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 340,
        "wires": [
            [
                "ed883b7103a2edda"
            ]
        ]
    },
    {
        "id": "de9c573d7f4946d7",
        "type": "subflow",
        "name": "Dynamic Power Control",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 380,
                "wires": [
                    {
                        "id": "ecc499836f3e0860"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 280,
                "wires": [
                    {
                        "id": "14ff9ca5127d0a5e",
                        "port": 0
                    },
                    {
                        "id": "63a0e44fa5bc60aa",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "module": "Dynamic Power Control",
            "type": "Switch",
            "desc": "switches flow and control"
        },
        "color": "#00ff99",
        "icon": "node-red-dashboard/ui_switch.png",
        "status": {
            "x": 600,
            "y": 200,
            "wires": [
                {
                    "id": "c94025e54e96e2c5",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "c94025e54e96e2c5",
        "type": "ui_switch",
        "z": "de9c573d7f4946d7",
        "name": "Dynamic Control",
        "label": "Dynamic Control",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 14,
        "width": 6,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "state",
        "topicType": "str",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 360,
        "y": 320,
        "wires": [
            [
                "ecc499836f3e0860",
                "63a0e44fa5bc60aa"
            ]
        ]
    },
    {
        "id": "63a0e44fa5bc60aa",
        "type": "function",
        "z": "de9c573d7f4946d7",
        "name": "reset after off",
        "func": "var state = context.get(\"state\") || \"off\";\nvar max = 100;\n\nif (state == \"off\") {\n    return [{ payload: max }];\n\n}\n\n\n//var max = 100;\n//return [{ payload:max}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "ecc499836f3e0860",
        "type": "function",
        "z": "de9c573d7f4946d7",
        "name": "Flow On/OFF",
        "func": "var state = context.get(\"state\") || \"off\";\n\n// Display initial state status\nif (state == \"on\") {\n    node.status({ fill: \"green\", shape: \"dot\", text: state });\n} else {\n    node.status({ fill: \"red\", shape: \"dot\", text: state });\n}\n\nif (msg.topic == \"state\") {\n    context.set(\"state\", msg.payload);\n    state = msg.payload;\n    // update status\n    if (state == \"on\") {\n        node.status({ fill: \"green\", shape: \"dot\", text: state });\n    } else {\n        node.status({ fill: \"red\", shape: \"dot\", text: state });\n    }\n} else {\n    if (state == \"on\") {\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\n//var max = 100;\n//return [{ payload:max}];",
        "libs": [],
        "x": 620,
        "y": 380,
        "wires": [
            [
                "a44069203734aa13"
            ]
        ]
    },
    {
        "id": "a44069203734aa13",
        "type": "smooth",
        "z": "de9c573d7f4946d7",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "8",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 800,
        "y": 380,
        "wires": [
            [
                "14ff9ca5127d0a5e"
            ]
        ]
    },
    {
        "id": "14ff9ca5127d0a5e",
        "type": "delay",
        "z": "de9c573d7f4946d7",
        "name": "",
        "pauseType": "rate",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 950,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "91f2b88a5bb63b5c",
        "type": "subflow",
        "name": "Power Limiter",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 220,
                "wires": [
                    {
                        "id": "0cde5c8fc3e86af2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1105,
                "y": 220,
                "wires": [
                    {
                        "id": "e86cb7f69dea4f79",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1105,
                "y": 280,
                "wires": [
                    {
                        "id": "8f455fafb8402332",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#00ff99",
        "inputLabels": [
            "Actual use input"
        ],
        "outputLabels": [
            "Output 0 - 100%",
            "Output in Watt"
        ],
        "icon": "node-red-dashboard/ui_slider.png"
    },
    {
        "id": "0cde5c8fc3e86af2",
        "type": "function",
        "z": "91f2b88a5bb63b5c",
        "name": "Power limit factor",
        "func": "//var Marge = 400 ;\n//var Limfactor = (msg.payload + Marge) / 5000 ;\nvar factor = global.get(\"InverterPower\");\nvar Limfactor = (msg.payload) / factor ; // 5000;\nreturn [{ payload: Limfactor }];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 295,
        "y": 220,
        "wires": [
            [
                "65dcc91fc217ee42"
            ]
        ]
    },
    {
        "id": "e1fb619116c1a729",
        "type": "function",
        "z": "91f2b88a5bb63b5c",
        "name": "* 100",
        "func": "var lim = msg.payload *100 ;\nvar limit = Math.ceil(lim) ; \nreturn [{payload: limit}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 220,
        "wires": [
            [
                "e86cb7f69dea4f79"
            ]
        ]
    },
    {
        "id": "65dcc91fc217ee42",
        "type": "function",
        "z": "91f2b88a5bb63b5c",
        "name": "abs",
        "func": "var abs = Math.abs(msg.payload);\n\nreturn [{ payload: abs }]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 455,
        "y": 220,
        "wires": [
            [
                "e1fb619116c1a729"
            ]
        ]
    },
    {
        "id": "e86cb7f69dea4f79",
        "type": "function",
        "z": "91f2b88a5bb63b5c",
        "name": "range (min-max)",
        "func": "var min = 0 ;\nvar max = 100 ;\n\nvar limit = msg.payload ;\n\nif (limit > max) {\n    limit = max;\n} else if (limit < min) {\n    limit = min;\n} \n\n\nreturn[{payload:limit}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 725,
        "y": 220,
        "wires": [
            [
                "8f455fafb8402332"
            ]
        ]
    },
    {
        "id": "8f455fafb8402332",
        "type": "function",
        "z": "91f2b88a5bb63b5c",
        "name": "limit W",
        "func": "var factor = global.get(\"InverterPower\") / 100 ;\nvar lim = msg.payload * factor ; //50; // factor for 5kW  inverter\nreturn [{ payload: lim }];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 915,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6b2a351fa8bf28a0",
        "type": "subflow",
        "name": "Dynamic Price Control",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 380,
                "y": 360,
                "wires": [
                    {
                        "id": "9e1b475da01a889e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 820,
                "y": 360,
                "wires": [
                    {
                        "id": "80a25660aba3ea50",
                        "port": 0
                    },
                    {
                        "id": "9e1b475da01a889e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#00ff99",
        "icon": "node-red-dashboard/ui_switch.png",
        "status": {
            "x": 590,
            "y": 510,
            "wires": [
                {
                    "id": "3847bc324ebcefa8",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "3847bc324ebcefa8",
        "type": "ui_switch",
        "z": "6b2a351fa8bf28a0",
        "name": "Dynamic Price Control",
        "label": "Dynamic Price Control",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 17,
        "width": 6,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "state",
        "topicType": "str",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 400,
        "y": 420,
        "wires": [
            [
                "9e1b475da01a889e",
                "80a25660aba3ea50"
            ]
        ]
    },
    {
        "id": "80a25660aba3ea50",
        "type": "function",
        "z": "6b2a351fa8bf28a0",
        "name": "reset after off",
        "func": "var state = context.get(\"state\") || \"off\";\nvar max = 100;\n\nif (state == \"off\") {\n    return [{ payload: max }];\n\n}\n\n\n//var max = 100;\n//return [{ payload:max}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "9e1b475da01a889e",
        "type": "function",
        "z": "6b2a351fa8bf28a0",
        "name": "Flow On/OFF",
        "func": "var state = context.get(\"state\") || \"off\";\n\n// Display initial state status\nif (state == \"on\") {\n    node.status({ fill: \"green\", shape: \"dot\", text: state });\n} else {\n    node.status({ fill: \"red\", shape: \"dot\", text: state });\n}\n\nif (msg.topic == \"state\") {\n    context.set(\"state\", msg.payload);\n    state = msg.payload;\n    // update status\n    if (state == \"on\") {\n        node.status({ fill: \"green\", shape: \"dot\", text: state });\n    } else {\n        node.status({ fill: \"red\", shape: \"dot\", text: state });\n    }\n} else {\n    if (state == \"on\") {\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\n//var max = 100;\n//return [{ payload:max}];",
        "libs": [],
        "x": 640,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "ab6df2021842557a",
        "type": "subflow",
        "name": "Price Limiter",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 205,
                "y": 135,
                "wires": [
                    {
                        "id": "c5e84d4e125fe002"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1185,
                "y": 135,
                "wires": [
                    {
                        "id": "b79180f99cfcc80f",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1185,
                "y": 240,
                "wires": [
                    {
                        "id": "6153e19b1220d107",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#00ff99",
        "inputLabels": [
            "Current Price Input"
        ],
        "outputLabels": [
            "Output 5 or 100% ",
            "Output PriceLimit"
        ],
        "icon": "node-red-dashboard/ui_slider.png",
        "status": {
            "x": 680,
            "y": 270,
            "wires": [
                {
                    "id": "6fd42c27cc1ef027",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "c5e84d4e125fe002",
        "type": "change",
        "z": "ab6df2021842557a",
        "name": "CurrentPrice",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "CurrentPrice",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 425,
        "y": 135,
        "wires": [
            [
                "6153e19b1220d107"
            ]
        ]
    },
    {
        "id": "6153e19b1220d107",
        "type": "Comparator",
        "z": "ab6df2021842557a",
        "name": "Comparator",
        "property": "payload",
        "math": "<=",
        "topic1": "CurrentPrice",
        "topic2": "PriceLimit",
        "x": 625,
        "y": 135,
        "wires": [
            [
                "b79180f99cfcc80f"
            ]
        ]
    },
    {
        "id": "cc3fa25c0ba8c828",
        "type": "inject",
        "z": "ab6df2021842557a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "#:(storeInFile)::PriceLimit",
        "payloadType": "global",
        "x": 210,
        "y": 210,
        "wires": [
            [
                "6fd42c27cc1ef027"
            ]
        ]
    },
    {
        "id": "b79180f99cfcc80f",
        "type": "function",
        "z": "ab6df2021842557a",
        "name": "Power Limit 0 or 100 %",
        "func": "var compare = msg.payload ;\n\nswitch(compare) {\n  case true:\n    var Limfactor = 5\n    break;\n  case false:\n    var Limfactor = 100\n    break;\n  default:\n    var Limfactor = 100\n}\n\n\n\nreturn [{ payload: Limfactor }];\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 135,
        "wires": [
            []
        ]
    },
    {
        "id": "6e31e74ab743b06b",
        "type": "change",
        "z": "ab6df2021842557a",
        "name": "Last",
        "rules": [
            {
                "t": "set",
                "p": "#:(storeInFile)::PriceLimit",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 270,
        "wires": [
            []
        ]
    },
    {
        "id": "6fd42c27cc1ef027",
        "type": "ui_slider",
        "z": "ab6df2021842557a",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 19,
        "width": 6,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "PriceLimit",
        "topicType": "str",
        "min": "-0.75",
        "max": "0.75",
        "step": "0.01",
        "className": "",
        "x": 415,
        "y": 210,
        "wires": [
            [
                "6e31e74ab743b06b",
                "6153e19b1220d107"
            ]
        ]
    },
    {
        "id": "13df5f05b3eee65f",
        "type": "inject",
        "z": "ab6df2021842557a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "#:(storeInFile)::CurrentPrice",
        "payloadType": "global",
        "x": 205,
        "y": 60,
        "wires": [
            [
                "c5e84d4e125fe002"
            ]
        ]
    },
    {
        "id": "a79f781fe93e4f67",
        "type": "subflow",
        "name": "Prices",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 410,
                "y": 330,
                "wires": [
                    {
                        "id": "c672a69b5e90dcc4"
                    },
                    {
                        "id": "cc87fd3bc2bc8a01"
                    },
                    {
                        "id": "3822ddec1a5dc999"
                    },
                    {
                        "id": "e39005318c6d86ef"
                    },
                    {
                        "id": "99e0c94804e39bd5"
                    },
                    {
                        "id": "b73e8e7c972863b8"
                    },
                    {
                        "id": "54a0f9fa55e32ff3"
                    },
                    {
                        "id": "23d9a2f6bc027228"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 930,
                "y": 420,
                "wires": [
                    {
                        "id": "cc87fd3bc2bc8a01",
                        "port": 0
                    }
                ]
            },
            {
                "x": 920,
                "y": 480,
                "wires": [
                    {
                        "id": "3822ddec1a5dc999",
                        "port": 0
                    }
                ]
            },
            {
                "x": 910,
                "y": 540,
                "wires": [
                    {
                        "id": "e39005318c6d86ef",
                        "port": 0
                    }
                ]
            },
            {
                "x": 910,
                "y": 600,
                "wires": [
                    {
                        "id": "99e0c94804e39bd5",
                        "port": 0
                    }
                ]
            },
            {
                "x": 910,
                "y": 660,
                "wires": [
                    {
                        "id": "b73e8e7c972863b8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 910,
                "y": 720,
                "wires": [
                    {
                        "id": "54a0f9fa55e32ff3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#00ff99",
        "inputLabels": [
            "Price input"
        ],
        "outputLabels": [
            "Current Price",
            "Next Hour",
            "+2h",
            "+3h",
            "+4h",
            "+5h"
        ],
        "icon": "font-awesome/fa-eur",
        "status": {
            "x": 980,
            "y": 360,
            "wires": [
                {
                    "id": "cc87fd3bc2bc8a01",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "c672a69b5e90dcc4",
        "type": "function",
        "z": "a79f781fe93e4f67",
        "name": "Current Hour",
        "func": "//msg.payload = {};\n\nconst d = new Date();\nlet hour = d.getHours();\n//let value = payload.average();\n\n//var msg = payload.Prices[hour].price;\nmsg.payload = msg.array[hour];\n\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 270,
        "wires": [
            [
                "23d9a2f6bc027228"
            ]
        ]
    },
    {
        "id": "cc87fd3bc2bc8a01",
        "type": "function",
        "z": "a79f781fe93e4f67",
        "name": "Current Price",
        "func": "const d = new Date();\n\nvar hourOffset = 0\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 655,
        "y": 390,
        "wires": [
            [
                "23d9a2f6bc027228",
                "117351c614774cf1"
            ]
        ]
    },
    {
        "id": "3822ddec1a5dc999",
        "type": "function",
        "z": "a79f781fe93e4f67",
        "name": "Next Hour",
        "func": "const d = new Date();\n\nvar hourOffset = 1\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "e39005318c6d86ef",
        "type": "function",
        "z": "a79f781fe93e4f67",
        "name": "+2",
        "func": "const d = new Date();\n\nvar hourOffset = 2\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "99e0c94804e39bd5",
        "type": "function",
        "z": "a79f781fe93e4f67",
        "name": "+3",
        "func": "const d = new Date();\n\nvar hourOffset = 3\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "b73e8e7c972863b8",
        "type": "function",
        "z": "a79f781fe93e4f67",
        "name": "+4",
        "func": "const d = new Date();\n\nvar hourOffset = 4\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "54a0f9fa55e32ff3",
        "type": "function",
        "z": "a79f781fe93e4f67",
        "name": "+5",
        "func": "const d = new Date();\n\nvar hourOffset = 5\nlet hour = d.getHours() + hourOffset;\n\nvar msg = msg.payload.Prices[hour].price;\nreturn [{payload: msg}];\n\n\n// https://energie.anwb.nl/actuele-tarieven",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "23d9a2f6bc027228",
        "type": "debug",
        "z": "a79f781fe93e4f67",
        "name": "debug 61",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 825,
        "y": 330,
        "wires": []
    },
    {
        "id": "117351c614774cf1",
        "type": "change",
        "z": "a79f781fe93e4f67",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(storeInFile)::CurrentPrice",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 435,
        "wires": [
            []
        ]
    },
    {
        "id": "93f82086da57e6d7",
        "type": "subflow",
        "name": "Energy zero",
        "info": "This subflow uses the energy zero API for retrieving the hourly energy prices from the API of https://www.energyzero.nl/ for either today or the next day. \nThese are the prices as they are used by the Dutch energy providers ANWB energie, Energie van Ons and others.\n\nIn order not to load the API too heavy a rate limiter of 1 query per 15 minutes has been added to the subflow.\n\nDo note that tomorrows prices can be queried after 15:00, so there is a delay built in the\nnode that handles that.\n\n# Configuration\n\nPrice information can be retrieved for either today or tomorrow (default). It\nis also possible set if the prices should be retrieved including (default) or excluding tax.\n\n# Input\n\nIt triggers when injecting a message into the node.\n\n# Output\n\nThe output is an object with the result and a status message stored into the `msg.payload`.\n\nMost important is the `msg.payload.result`, which contains the estimated production of the panels. E.g.:\n\n```\npayload: object\n  Prices: array[24]\n    [0 … 9]\n    [10 … 19]\n    [20 … 23]\n      20: object\n        price: 0.15\n        readingDate: \"2023-01-04T19:00:00Z\"\n      21: object\n      22: object\n      23: object\n  intervalType: 4\n  average: 0.12\n  fromDate: \"2023-01-03T23:00:00Z\"\n  tillDate: \"2023-01-04T22:59:59.999Z\"\n```\n\nThe `msg.payload.average` gives the average price.\n\n# Status\n\nIn order not to load the api too much a rate limit has been added to maximize\nqueries once per 15 minutes. The status message turns green when a query is\nallowed and red if it is not allowed.\n\nIf the delay is active (tomorrows prices can be queried after 15:00), the\nnode will show that and wait until 15:00 before passing the message.\n",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "d1f0fa5b4c9f4ed6"
                    },
                    {
                        "id": "6f832cdaf472a7e7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1120,
                "y": 80,
                "wires": [
                    {
                        "id": "5e929c72c47c4d94",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "type",
                "type": "str",
                "value": "tomorrow",
                "ui": {
                    "icon": "font-awesome/fa-calendar",
                    "label": {
                        "en-US": "Type"
                    },
                    "type": "select",
                    "opts": {
                        "opts": [
                            {
                                "l": {
                                    "en-US": "Today"
                                },
                                "v": "today"
                            },
                            {
                                "l": {
                                    "en-US": "Tomorrow"
                                },
                                "v": "tomorrow"
                            }
                        ]
                    }
                }
            },
            {
                "name": "inctax",
                "type": "bool",
                "value": "true",
                "ui": {
                    "icon": "font-awesome/fa-money",
                    "label": {
                        "en-US": "Inc. tax"
                    },
                    "type": "checkbox"
                }
            }
        ],
        "meta": {
            "module": "Energy zero",
            "version": "0.0.2",
            "author": "Dirk-Jan Faber <dfaber@victronenergy.com>",
            "desc": "Query the Energy Zero API",
            "keywords": "energy zero, anwb, victron",
            "license": "GPL-3.0"
        },
        "color": "#00bb00",
        "icon": "font-awesome/fa-sun-o",
        "status": {
            "x": 940,
            "y": 240,
            "wires": [
                {
                    "id": "6f832cdaf472a7e7",
                    "port": 0
                },
                {
                    "id": "3a5477eda4334835",
                    "port": 0
                },
                {
                    "id": "31cbeb703f6c6d76",
                    "port": 0
                },
                {
                    "id": "844c68d9d94e8549",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "1cb972f378359956",
        "type": "http request",
        "z": "93f82086da57e6d7",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 810,
        "y": 80,
        "wires": [
            [
                "5e929c72c47c4d94"
            ]
        ]
    },
    {
        "id": "3d908fffe7b03a7e",
        "type": "function",
        "z": "93f82086da57e6d7",
        "name": "create energyzero url",
        "func": "msg.url = 'https://api.energyzero.nl/v1/energyprices';\nvar offset = 0;\nmsg.delay = 0;\nvar start = new Date();\n\nif (env.get('type') == 'tomorrow') {\n    offset = 24;\n    const targetTime = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 15, 0, 0);\n    msg.delay = targetTime.getTime() - start.getTime();\n}\n\nstart.setUTCHours(0 + offset, start.getTimezoneOffset(), 0, 0);\nmsg.url += '?fromDate=' + start.toISOString();\n\nvar end = new Date();\nend.setUTCHours(23 + offset, start.getTimezoneOffset()+59, 59, 999);\nmsg.url += '&tillDate=' + end.toISOString();\n\nmsg.url += '&interval=4&usageType=1'\n\nif (env.get('inctax')) {\n    msg.url += '&inclBtw=true'\n} else {\n    msg.url += '&inclBtw=false'\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 80,
        "wires": [
            [
                "59134444b79a8eb0",
                "87304e5fd58f4c33"
            ]
        ]
    },
    {
        "id": "5e929c72c47c4d94",
        "type": "json",
        "z": "93f82086da57e6d7",
        "name": "Convert to json",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 980,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d1f0fa5b4c9f4ed6",
        "type": "delay",
        "z": "93f82086da57e6d7",
        "name": "1 msg/15 seconds",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "15",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 190,
        "y": 80,
        "wires": [
            [
                "3d908fffe7b03a7e",
                "8fca7ed9f7f03b7d"
            ]
        ]
    },
    {
        "id": "8fca7ed9f7f03b7d",
        "type": "delay",
        "z": "93f82086da57e6d7",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 220,
        "wires": [
            [
                "3a5477eda4334835"
            ]
        ]
    },
    {
        "id": "6f832cdaf472a7e7",
        "type": "change",
        "z": "93f82086da57e6d7",
        "name": "rate limit active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"fill\": \"yellow\", \"text\": \"Rate limiter active\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3a5477eda4334835",
        "type": "change",
        "z": "93f82086da57e6d7",
        "name": "rate limit inactive",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"fill\": \"green\", \"text\": \"Ok\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "bd5a9d9dd3b03f95",
        "type": "inject",
        "z": "93f82086da57e6d7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 260,
        "wires": [
            [
                "3a5477eda4334835"
            ]
        ]
    },
    {
        "id": "59134444b79a8eb0",
        "type": "delay",
        "z": "93f82086da57e6d7",
        "name": "Optional delay",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 640,
        "y": 80,
        "wires": [
            [
                "1cb972f378359956",
                "844c68d9d94e8549"
            ]
        ]
    },
    {
        "id": "87304e5fd58f4c33",
        "type": "switch",
        "z": "93f82086da57e6d7",
        "name": "",
        "property": "delay",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 160,
        "wires": [
            [
                "31cbeb703f6c6d76"
            ]
        ]
    },
    {
        "id": "31cbeb703f6c6d76",
        "type": "change",
        "z": "93f82086da57e6d7",
        "name": "delay",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"fill\": \"yellow\", \"text\": \"Delaying until 15.00\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "844c68d9d94e8549",
        "type": "change",
        "z": "93f82086da57e6d7",
        "name": "Ok",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"fill\": \"green\", \"text\": \"Ok\" }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "55de0799553ebf41",
        "type": "tab",
        "label": "SMA Sunny Tripower 5.0",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f42b76fade4fea03",
        "type": "group",
        "z": "55de0799553ebf41",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "150b9e9eee5637aa",
            "fe1f4be381ccd6e5",
            "b3e5196dbb97ba2f"
        ],
        "x": 14,
        "y": 14,
        "w": 572,
        "h": 132
    },
    {
        "id": "561b9e3a5c12809e",
        "type": "group",
        "z": "55de0799553ebf41",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "5144e35904b2cf43",
            "7318b6a1964e40c7",
            "2993693f3b1ceef2",
            "a2447120931663b7",
            "504a057ba4178c83",
            "ef90eeabcec17cc8",
            "85a74b579799a5dd",
            "6c1d2b407881114c",
            "e3cdcc2e1000a551",
            "047e947060a3f74b",
            "36bfb3eee603edb9",
            "dfaf2e09262d83c9"
        ],
        "x": 9,
        "y": 1204,
        "w": 1112,
        "h": 337
    },
    {
        "id": "85a654f60dbf06bd",
        "type": "group",
        "z": "55de0799553ebf41",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "56b42fe82e596e5b",
            "05fd05134ac196ab",
            "107400edc16a1968",
            "2948e10d6e09dbe2",
            "c6108c32db674fac",
            "803cea0f0d662b80",
            "757cdf1cbbaa9545",
            "abc4c44a4a4383f6"
        ],
        "x": 799,
        "y": 949,
        "w": 987,
        "h": 242
    },
    {
        "id": "21b9bf1bd54eda9a",
        "type": "group",
        "z": "55de0799553ebf41",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "7a8355be126f096e",
            "a1146b7a4c435cdc",
            "0be40e478fdde768",
            "0ea6cf27ab1de035",
            "63d7e277c669b014",
            "6a4b710ff298943b",
            "9503ecad2c97a04d",
            "ca5ef773143c5133",
            "36de9e16a426ddc4",
            "e6ead7b3c7808f26",
            "82f6fe92cb0f3b98",
            "6f8764b986830fc3"
        ],
        "x": 14,
        "y": 689,
        "w": 1117,
        "h": 247
    },
    {
        "id": "74b06eb0c89f964f",
        "type": "group",
        "z": "55de0799553ebf41",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "c7ccdba96d7ddf50",
            "e7e6537f46f57efe",
            "cb0294db7c5f3ff4",
            "4ba89245c692d02c",
            "59905611ce8ea9c1",
            "29769423d5526999",
            "1d53d203d7421fcd",
            "8baf94b714e1ff89",
            "dfcaf5f415ad0caa",
            "79ba13939c7de315",
            "12a7d098f18a9d4f",
            "103132bc3684eb17",
            "b0086d7fe14158e7",
            "044c130037ed825c"
        ],
        "x": 18,
        "y": 353,
        "w": 1768,
        "h": 323
    },
    {
        "id": "da640520abf00d4a",
        "type": "group",
        "z": "55de0799553ebf41",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "61069da2803776ab",
            "17eeec8e8f0e9919",
            "0448f1abf5a89415",
            "3c7bb278ac646bfa",
            "8e8da1d0e7608341",
            "c2f9253988473194",
            "a30b154f4cd71c47",
            "029d6f446b23e078"
        ],
        "x": 14,
        "y": 154,
        "w": 1032,
        "h": 187
    },
    {
        "id": "103132bc3684eb17",
        "type": "group",
        "z": "55de0799553ebf41",
        "g": "74b06eb0c89f964f",
        "name": "",
        "style": {
            "fill": "#dbcbe7",
            "label": true
        },
        "nodes": [
            "b0b8d9ee73faa8c9",
            "36d0fe59e8e8b097",
            "a99ca5df2812c73d"
        ],
        "x": 524,
        "y": 379,
        "w": 252,
        "h": 172
    },
    {
        "id": "b2fd06070b1ddcff",
        "type": "group",
        "z": "55de0799553ebf41",
        "name": "",
        "style": {
            "fill": "#92d04f",
            "label": true
        },
        "nodes": [
            "bef0158b2ea84862"
        ],
        "x": 1609,
        "y": 19,
        "w": 172,
        "h": 82
    },
    {
        "id": "b0086d7fe14158e7",
        "type": "group",
        "z": "55de0799553ebf41",
        "g": "74b06eb0c89f964f",
        "name": "",
        "style": {
            "fill": "#ffdf7f",
            "label": true
        },
        "nodes": [
            "527b16bbdadb45b6",
            "3a682503f409963c"
        ],
        "x": 44,
        "y": 544,
        "w": 237,
        "h": 82
    },
    {
        "id": "044c130037ed825c",
        "type": "group",
        "z": "55de0799553ebf41",
        "g": "74b06eb0c89f964f",
        "name": "",
        "style": {
            "fill": "#ffdf7f",
            "label": true
        },
        "nodes": [
            "9c40278d21e31326",
            "90b902f8c42e1545"
        ],
        "x": 49,
        "y": 424,
        "w": 232,
        "h": 82
    },
    {
        "id": "029d6f446b23e078",
        "type": "inject",
        "z": "55de0799553ebf41",
        "g": "da640520abf00d4a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 275,
        "wires": [
            [
                "c2f9253988473194"
            ]
        ]
    },
    {
        "id": "c2f9253988473194",
        "type": "modbus-getter",
        "z": "55de0799553ebf41",
        "g": "da640520abf00d4a",
        "name": "SMA Modbus (41255) Power",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "3",
        "dataType": "HoldingRegister",
        "adr": "41255",
        "quantity": "2",
        "server": "67aa8a7899544f4d",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 395,
        "y": 275,
        "wires": [
            [
                "17eeec8e8f0e9919",
                "3c7bb278ac646bfa"
            ],
            []
        ]
    },
    {
        "id": "61069da2803776ab",
        "type": "ui_text",
        "z": "55de0799553ebf41",
        "g": "da640520abf00d4a",
        "group": "4fb0db5cea9cd881",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "Power limit %",
        "label": "SMA Power Limit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 940,
        "y": 240,
        "wires": []
    },
    {
        "id": "17eeec8e8f0e9919",
        "type": "function",
        "z": "55de0799553ebf41",
        "g": "da640520abf00d4a",
        "name": "Power Limit",
        "func": "var limit = msg.payload[0] /100;\n\n\n\nreturn [{ payload: limit }]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 240,
        "wires": [
            [
                "61069da2803776ab",
                "8e8da1d0e7608341"
            ]
        ]
    },
    {
        "id": "56b42fe82e596e5b",
        "type": "ui_slider",
        "z": "55de0799553ebf41",
        "g": "85a654f60dbf06bd",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": "5",
        "max": "100",
        "step": "5",
        "className": "",
        "x": 1235,
        "y": 1050,
        "wires": [
            [
                "05fd05134ac196ab",
                "107400edc16a1968"
            ]
        ]
    },
    {
        "id": "0448f1abf5a89415",
        "type": "ui_text",
        "z": "55de0799553ebf41",
        "g": "da640520abf00d4a",
        "group": "4fb0db5cea9cd881",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "W",
        "label": "",
        "format": "{{msg.payload}} W",
        "layout": "row-right",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "3c7bb278ac646bfa",
        "type": "function",
        "z": "55de0799553ebf41",
        "g": "da640520abf00d4a",
        "name": "Power Limit % to W , sma 5kW",
        "func": "var factor = global.get(\"InverterPower\") /10000 ;\n\nvar pro = msg.payload[0] * factor ; // 0.5; // factor 0.5 for 5kW  inverter\n\n\n\nreturn [{ payload: pro }]",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 300,
        "wires": [
            [
                "0448f1abf5a89415",
                "cb0294db7c5f3ff4"
            ]
        ]
    },
    {
        "id": "05fd05134ac196ab",
        "type": "function",
        "z": "55de0799553ebf41",
        "g": "85a654f60dbf06bd",
        "name": "* 100",
        "func": "var lim = msg.payload *100;\nreturn [{payload: lim}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 1050,
        "wires": [
            [
                "757cdf1cbbaa9545"
            ]
        ]
    },
    {
        "id": "107400edc16a1968",
        "type": "function",
        "z": "55de0799553ebf41",
        "g": "85a654f60dbf06bd",
        "name": "% to Watt , sma 5kW",
        "func": "var factor = global.get(\"InverterPower\") / 100 ;\nvar lim = msg.payload * factor ; //50; // factor for 5kW  inverter\nreturn [{payload: lim}];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1425,
        "y": 1150,
        "wires": [
            [
                "2948e10d6e09dbe2"
            ]
        ]
    },
    {
        "id": "2948e10d6e09dbe2",
        "type": "ui_text",
        "z": "55de0799553ebf41",
        "g": "85a654f60dbf06bd",
        "group": "4fb0db5cea9cd881",
        "order": 11,
        "width": 2,
        "height": 1,
        "name": "set:",
        "label": "",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#19e119",
        "x": 1635,
        "y": 1150,
        "wires": []
    },
    {
        "id": "a30b154f4cd71c47",
        "type": "comment",
        "z": "55de0799553ebf41",
        "g": "da640520abf00d4a",
        "name": "Read Modbus values",
        "info": "",
        "x": 400,
        "y": 240,
        "wires": []
    },
    {
        "id": "c6108c32db674fac",
        "type": "comment",
        "z": "55de0799553ebf41",
        "g": "85a654f60dbf06bd",
        "name": "Write Modbus Register",
        "info": "",
        "x": 1610,
        "y": 1010,
        "wires": []
    },
    {
        "id": "7a8355be126f096e",
        "type": "comment",
        "z": "55de0799553ebf41",
        "g": "21b9bf1bd54eda9a",
        "name": "Dynamic Power Control ",
        "info": "",
        "x": 535,
        "y": 735,
        "wires": []
    },
    {
        "id": "3a682503f409963c",
        "type": "link in",
        "z": "55de0799553ebf41",
        "g": "b0086d7fe14158e7",
        "name": "actual use in 1",
        "links": [
            "b792982110625bd6"
        ],
        "x": 240,
        "y": 585,
        "wires": [
            [
                "c7ccdba96d7ddf50",
                "59905611ce8ea9c1",
                "6a4b710ff298943b"
            ]
        ]
    },
    {
        "id": "527b16bbdadb45b6",
        "type": "comment",
        "z": "55de0799553ebf41",
        "g": "b0086d7fe14158e7",
        "name": "actual use in",
        "info": "actual use in: Use your own payload",
        "x": 140,
        "y": 585,
        "wires": []
    },
    {
        "id": "c7ccdba96d7ddf50",
        "type": "ui_text",
        "z": "55de0799553ebf41",
        "g": "74b06eb0c89f964f",
        "group": "4fb0db5cea9cd881",
        "order": 3,
        "width": 6,
        "height": 1,
        "name": "Actual",
        "label": "Actual Use",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#0a95eb",
        "x": 665,
        "y": 585,
        "wires": []
    },
    {
        "id": "a1146b7a4c435cdc",
        "type": "ui_text",
        "z": "55de0799553ebf41",
        "g": "21b9bf1bd54eda9a",
        "group": "4fb0db5cea9cd881",
        "order": 4,
        "width": 4,
        "height": 1,
        "name": "Dynamic Limit",
        "label": "Calc. Dynamic Limit",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffcb13",
        "x": 925,
        "y": 850,
        "wires": []
    },
    {
        "id": "803cea0f0d662b80",
        "type": "comment",
        "z": "55de0799553ebf41",
        "g": "85a654f60dbf06bd",
        "name": "Manual Power Limit Slider",
        "info": "",
        "x": 1285,
        "y": 990,
        "wires": []
    },
    {
        "id": "abc4c44a4a4383f6",
        "type": "inject",
        "z": "55de0799553ebf41",
        "g": "85a654f60dbf06bd",
        "name": "Daily reset to 100%",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 945,
        "y": 1050,
        "wires": [
            [
                "56b42fe82e596e5b"
            ]
        ]
    },
    {
        "id": "0be40e478fdde768",
        "type": "ui_text",
        "z": "55de0799553ebf41",
        "g": "21b9bf1bd54eda9a",
        "group": "4fb0db5cea9cd881",
        "order": 5,
        "width": 2,
        "height": 1,
        "name": "W",
        "label": "",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffcb13",
        "x": 895,
        "y": 890,
        "wires": []
    },
    {
        "id": "e7e6537f46f57efe",
        "type": "ui_chart",
        "z": "55de0799553ebf41",
        "g": "74b06eb0c89f964f",
        "name": "",
        "group": "4fb0db5cea9cd881",
        "order": 1,
        "width": 6,
        "height": 5,
        "label": "SMA Tripower 5.0",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#21a1de",
            "#19e119",
            "#ffcb13",
            "#ff7d0f",
            "#98df8a",
            "#c3f05a",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1670,
        "y": 525,
        "wires": [
            []
        ]
    },
    {
        "id": "cb0294db7c5f3ff4",
        "type": "change",
        "z": "55de0799553ebf41",
        "d": true,
        "g": "74b06eb0c89f964f",
        "name": "Powerlimit",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "P-Limit",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 525,
        "wires": [
            [
                "e7e6537f46f57efe"
            ]
        ]
    },
    {
        "id": "4ba89245c692d02c",
        "type": "change",
        "z": "55de0799553ebf41",
        "g": "74b06eb0c89f964f",
        "name": "Actual Use",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Act. Use",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1275,
        "y": 585,
        "wires": [
            [
                "8baf94b714e1ff89"
            ]
        ]
    },
    {
        "id": "59905611ce8ea9c1",
        "type": "function",
        "z": "55de0799553ebf41",
        "g": "74b06eb0c89f964f",
        "name": "Actual use",
        "func": "\nvar Actual = msg.payload ;\nreturn [{ payload: Actual }];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1075,
        "y": 585,
        "wires": [
            [
                "4ba89245c692d02c"
            ]
        ]
    },
    {
        "id": "0ea6cf27ab1de035",
        "type": "ui_numeric",
        "z": "55de0799553ebf41",
        "g": "21b9bf1bd54eda9a",
        "name": "marge",
        "label": "Marge",
        "tooltip": "",
        "group": "4fb0db5cea9cd881",
        "order": 12,
        "width": 4,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "Marge",
        "topicType": "msg",
        "format": "{{value}} W",
        "min": 0,
        "max": "1000",
        "step": "50",
        "className": "",
        "x": 270,
        "y": 855,
        "wires": [
            [
                "63d7e277c669b014",
                "ca5ef773143c5133"
            ]
        ]
    },
    {
        "id": "63d7e277c669b014",
        "type": "change",
        "z": "55de0799553ebf41",
        "g": "21b9bf1bd54eda9a",
        "name": "Marge",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Marge",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 855,
        "wires": [
            [
                "6a4b710ff298943b"
            ]
        ]
    },
    {
        "id": "6a4b710ff298943b",
        "type": "SumUltimate",
        "z": "55de0799553ebf41",
        "g": "21b9bf1bd54eda9a",
        "name": "actual",
        "property": "payload",
        "math": "sum",
        "x": 535,
        "y": 830,
        "wires": [
            [
                "36de9e16a426ddc4"
            ]
        ]
    },
    {
        "id": "9503ecad2c97a04d",
        "type": "inject",
        "z": "55de0799553ebf41",
        "g": "21b9bf1bd54eda9a",
        "name": "Last Used",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "last",
        "payloadType": "flow",
        "x": 130,
        "y": 855,
        "wires": [
            [
                "0ea6cf27ab1de035"
            ]
        ]
    },
    {
        "id": "29769423d5526999",
        "type": "change",
        "z": "55de0799553ebf41",
        "d": true,
        "g": "74b06eb0c89f964f",
        "name": "Calc. Limit",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Calc. Lim.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 635,
        "wires": [
            [
                "dfcaf5f415ad0caa"
            ]
        ]
    },
    {
        "id": "ca5ef773143c5133",
        "type": "change",
        "z": "55de0799553ebf41",
        "g": "21b9bf1bd54eda9a",
        "name": "last",
        "rules": [
            {
                "t": "set",
                "p": "#:(storeInFile)::last",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 895,
        "wires": [
            []
        ]
    },
    {
        "id": "9c40278d21e31326",
        "type": "link in",
        "z": "55de0799553ebf41",
        "g": "044c130037ed825c",
        "name": "AC solar pwr",
        "links": [
            "b07ce420a9bbb0b2"
        ],
        "x": 240,
        "y": 465,
        "wires": [
            [
                "1d53d203d7421fcd"
            ]
        ]
    },
    {
        "id": "90b902f8c42e1545",
        "type": "comment",
        "z": "55de0799553ebf41",
        "g": "044c130037ed825c",
        "name": "Solar power in",
        "info": "",
        "x": 145,
        "y": 465,
        "wires": []
    },
    {
        "id": "1d53d203d7421fcd",
        "type": "change",
        "z": "55de0799553ebf41",
        "g": "74b06eb0c89f964f",
        "name": "Ac power",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Solar Pwr",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 465,
        "wires": [
            [
                "79ba13939c7de315",
                "12a7d098f18a9d4f"
            ]
        ]
    },
    {
        "id": "8baf94b714e1ff89",
        "type": "delay",
        "z": "55de0799553ebf41",
        "g": "74b06eb0c89f964f",
        "name": "",
        "pauseType": "rate",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1450,
        "y": 585,
        "wires": [
            [
                "e7e6537f46f57efe"
            ]
        ]
    },
    {
        "id": "dfcaf5f415ad0caa",
        "type": "delay",
        "z": "55de0799553ebf41",
        "d": true,
        "g": "74b06eb0c89f964f",
        "name": "",
        "pauseType": "rate",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1450,
        "y": 635,
        "wires": [
            []
        ]
    },
    {
        "id": "79ba13939c7de315",
        "type": "delay",
        "z": "55de0799553ebf41",
        "g": "74b06eb0c89f964f",
        "name": "",
        "pauseType": "rate",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1440,
        "y": 465,
        "wires": [
            [
                "e7e6537f46f57efe"
            ]
        ]
    },
    {
        "id": "5144e35904b2cf43",
        "type": "subflow:93f82086da57e6d7",
        "z": "55de0799553ebf41",
        "g": "561b9e3a5c12809e",
        "name": "ANWB ",
        "env": [
            {
                "name": "type",
                "value": "today",
                "type": "str"
            }
        ],
        "x": 320,
        "y": 1395,
        "wires": [
            [
                "6c1d2b407881114c"
            ]
        ]
    },
    {
        "id": "7318b6a1964e40c7",
        "type": "inject",
        "z": "55de0799553ebf41",
        "g": "561b9e3a5c12809e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "array",
                "v": "[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\"]",
                "vt": "json"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 125,
        "y": 1395,
        "wires": [
            [
                "5144e35904b2cf43"
            ]
        ]
    },
    {
        "id": "2993693f3b1ceef2",
        "type": "comment",
        "z": "55de0799553ebf41",
        "g": "561b9e3a5c12809e",
        "name": "Dynamic Price Control",
        "info": "",
        "x": 545,
        "y": 1245,
        "wires": []
    },
    {
        "id": "a2447120931663b7",
        "type": "ui_text",
        "z": "55de0799553ebf41",
        "g": "561b9e3a5c12809e",
        "group": "4fb0db5cea9cd881",
        "order": 20,
        "width": 6,
        "height": 1,
        "name": "Current Price",
        "label": "Current Price",
        "format": "{{msg.payload}} euro",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 680,
        "y": 1365,
        "wires": []
    },
    {
        "id": "504a057ba4178c83",
        "type": "ui_text",
        "z": "55de0799553ebf41",
        "g": "561b9e3a5c12809e",
        "group": "4fb0db5cea9cd881",
        "order": 21,
        "width": 6,
        "height": 1,
        "name": "Next hour",
        "label": "Next hour",
        "format": "{{msg.payload}} euro",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 675,
        "y": 1410,
        "wires": []
    },
    {
        "id": "ef90eeabcec17cc8",
        "type": "ui_text",
        "z": "55de0799553ebf41",
        "g": "561b9e3a5c12809e",
        "group": "4fb0db5cea9cd881",
        "order": 22,
        "width": 6,
        "height": 1,
        "name": "Price +2h",
        "label": "Price: +2h",
        "format": "{{msg.payload}} euro",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 675,
        "y": 1455,
        "wires": []
    },
    {
        "id": "85a74b579799a5dd",
        "type": "ui_text",
        "z": "55de0799553ebf41",
        "d": true,
        "g": "561b9e3a5c12809e",
        "group": "4fb0db5cea9cd881",
        "order": 23,
        "width": 6,
        "height": 1,
        "name": "Price +3h",
        "label": "Price +3h",
        "format": "{{msg.payload}} euro",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 675,
        "y": 1500,
        "wires": []
    },
    {
        "id": "6c1d2b407881114c",
        "type": "subflow:a79f781fe93e4f67",
        "z": "55de0799553ebf41",
        "g": "561b9e3a5c12809e",
        "name": "",
        "x": 445,
        "y": 1395,
        "wires": [
            [
                "a2447120931663b7",
                "e3cdcc2e1000a551"
            ],
            [
                "504a057ba4178c83"
            ],
            [
                "ef90eeabcec17cc8"
            ],
            [
                "85a74b579799a5dd"
            ],
            [],
            []
        ]
    },
    {
        "id": "e3cdcc2e1000a551",
        "type": "subflow:ab6df2021842557a",
        "z": "55de0799553ebf41",
        "g": "561b9e3a5c12809e",
        "name": "",
        "x": 665,
        "y": 1290,
        "wires": [
            [
                "047e947060a3f74b"
            ],
            [
                "36bfb3eee603edb9"
            ]
        ]
    },
    {
        "id": "047e947060a3f74b",
        "type": "subflow:6b2a351fa8bf28a0",
        "z": "55de0799553ebf41",
        "g": "561b9e3a5c12809e",
        "name": "",
        "x": 955,
        "y": 1270,
        "wires": [
            [
                "dfaf2e09262d83c9"
            ]
        ]
    },
    {
        "id": "36de9e16a426ddc4",
        "type": "subflow:91f2b88a5bb63b5c",
        "z": "55de0799553ebf41",
        "g": "21b9bf1bd54eda9a",
        "name": "",
        "x": 705,
        "y": 830,
        "wires": [
            [
                "a1146b7a4c435cdc",
                "82f6fe92cb0f3b98",
                "e6ead7b3c7808f26"
            ],
            [
                "0be40e478fdde768"
            ]
        ]
    },
    {
        "id": "a99ca5df2812c73d",
        "type": "inject",
        "z": "55de0799553ebf41",
        "d": true,
        "g": "103132bc3684eb17",
        "name": "test actual use in",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3333",
        "payloadType": "num",
        "x": 660,
        "y": 510,
        "wires": [
            [
                "c7ccdba96d7ddf50",
                "59905611ce8ea9c1",
                "36de9e16a426ddc4"
            ]
        ],
        "icon": "font-awesome/fa-wrench"
    },
    {
        "id": "e6ead7b3c7808f26",
        "type": "subflow:de9c573d7f4946d7",
        "z": "55de0799553ebf41",
        "g": "21b9bf1bd54eda9a",
        "name": "",
        "x": 955,
        "y": 790,
        "wires": [
            [
                "6f8764b986830fc3"
            ]
        ]
    },
    {
        "id": "b0b8d9ee73faa8c9",
        "type": "inject",
        "z": "55de0799553ebf41",
        "d": true,
        "g": "103132bc3684eb17",
        "name": "test solar in",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4589",
        "payloadType": "num",
        "x": 650,
        "y": 420,
        "wires": [
            [
                "1d53d203d7421fcd"
            ]
        ],
        "icon": "font-awesome/fa-wrench"
    },
    {
        "id": "36d0fe59e8e8b097",
        "type": "comment",
        "z": "55de0799553ebf41",
        "g": "103132bc3684eb17",
        "name": "TESTING VALUES",
        "info": "",
        "x": 645,
        "y": 465,
        "wires": []
    },
    {
        "id": "150b9e9eee5637aa",
        "type": "inject",
        "z": "55de0799553ebf41",
        "g": "f42b76fade4fea03",
        "name": "Set Inverter Power Here (Watt)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "5000",
        "payloadType": "num",
        "x": 190,
        "y": 105,
        "wires": [
            [
                "fe1f4be381ccd6e5"
            ]
        ],
        "icon": "node-red/cog.svg"
    },
    {
        "id": "fe1f4be381ccd6e5",
        "type": "subflow:6feba42912222ac6",
        "z": "55de0799553ebf41",
        "g": "f42b76fade4fea03",
        "name": "",
        "x": 460,
        "y": 105,
        "wires": []
    },
    {
        "id": "b3e5196dbb97ba2f",
        "type": "comment",
        "z": "55de0799553ebf41",
        "g": "f42b76fade4fea03",
        "name": "CONFIG INVERTER POWER",
        "info": "",
        "x": 160,
        "y": 55,
        "wires": []
    },
    {
        "id": "12a7d098f18a9d4f",
        "type": "ui_text",
        "z": "55de0799553ebf41",
        "g": "74b06eb0c89f964f",
        "group": "4fb0db5cea9cd881",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Solar Power",
        "format": "{{msg.payload}} W",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "12",
        "color": "#19e119",
        "x": 1445,
        "y": 400,
        "wires": []
    },
    {
        "id": "36bfb3eee603edb9",
        "type": "StatusUltimate",
        "z": "55de0799553ebf41",
        "g": "561b9e3a5c12809e",
        "name": "Status",
        "property": "payload",
        "x": 790,
        "y": 1310,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "82f6fe92cb0f3b98",
        "type": "StatusUltimate",
        "z": "55de0799553ebf41",
        "g": "21b9bf1bd54eda9a",
        "name": "Status",
        "property": "payload",
        "x": 830,
        "y": 730,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "dfaf2e09262d83c9",
        "type": "StatusUltimate",
        "z": "55de0799553ebf41",
        "g": "561b9e3a5c12809e",
        "name": "Status",
        "property": "payload",
        "x": 1080,
        "y": 1270,
        "wires": [
            [
                "56b42fe82e596e5b"
            ]
        ],
        "l": false
    },
    {
        "id": "6f8764b986830fc3",
        "type": "StatusUltimate",
        "z": "55de0799553ebf41",
        "g": "21b9bf1bd54eda9a",
        "name": "Status",
        "property": "payload",
        "x": 1090,
        "y": 790,
        "wires": [
            [
                "56b42fe82e596e5b"
            ]
        ],
        "l": false
    },
    {
        "id": "8e8da1d0e7608341",
        "type": "StatusUltimate",
        "z": "55de0799553ebf41",
        "g": "da640520abf00d4a",
        "name": "Status",
        "property": "payload",
        "x": 825,
        "y": 195,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "757cdf1cbbaa9545",
        "type": "modbus-write",
        "z": "55de0799553ebf41",
        "g": "85a654f60dbf06bd",
        "name": "SMA Modbus Write 40023 ( Limit )",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "3",
        "dataType": "HoldingRegister",
        "adr": "40023",
        "quantity": "1",
        "server": "67aa8a7899544f4d",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1620,
        "y": 1050,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "bef0158b2ea84862",
        "type": "comment",
        "z": "55de0799553ebf41",
        "g": "b2fd06070b1ddcff",
        "name": "Version 0.8",
        "info": "Cleaned up\nadded some status indicators\ngroup by function",
        "x": 1695,
        "y": 60,
        "wires": []
    },
    {
        "id": "58c0061d17dd1ed6",
        "type": "ui_spacer",
        "z": "55de0799553ebf41",
        "name": "spacer",
        "group": "",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "ea3a2f48dc0e0b16",
        "type": "ui_spacer",
        "z": "55de0799553ebf41",
        "name": "spacer",
        "group": "4fb0db5cea9cd881",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "320ae74c2534a4aa",
        "type": "ui_spacer",
        "z": "55de0799553ebf41",
        "name": "spacer",
        "group": "4fb0db5cea9cd881",
        "order": 15,
        "width": 6,
        "height": 1
    },
    {
        "id": "67aa8a7899544f4d",
        "type": "modbus-client",
        "name": "SMA Modbus",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.178.4",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 3,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "4fb0db5cea9cd881",
        "type": "ui_group",
        "name": "SMA  settings",
        "tab": "cccf47e4.857ec8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "cccf47e4.857ec8",
        "type": "ui_tab",
        "name": "Energy",
        "icon": "battery_charging_60",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]